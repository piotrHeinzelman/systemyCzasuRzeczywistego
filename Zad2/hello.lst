     1                                  extern clock_gettime	
     2                                  extern _localtime
     3                                  extern printf
     4                                  section .data
     5                                  
     6                                  NR_read  equ 0
     7                                  NR_write equ 1
     8                                  NR_open  equ 2
     9                                  NR_close equ 3
    10                                  
    11                                  O_RDONLY equ 000000q
    12                                  
    13                                  
    14                                  
    15 00000000 00C1814001C0804101-     myHigh db 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x...
    15 00000009 C0804100C1814001C0-
    15 00000012 804100C1814000C181-
    15 0000001B 4001C0804101C08041-
    15 00000024 00C1814000C1814001-
    15 0000002D C0804100C1814001C0-
    15 00000036 804101C0804100C181-
    15 0000003F 4001C0804100C18140-
    15 00000048 00C1814001C0804100-
    15 00000051 C1814001C0804101C0-
    15 0000005A 804100C1814000C181-
    15 00000063 4001C0804101C08041-
    15 0000006C 00C1814001C0804100-
    15 00000075 C1814000C1814001C0-
    15 0000007E 804101C0804100C181-
    15 00000087 4000C1814001C08041-
    15 00000090 00C1814001C0804101-
    15 00000099 C0804100C1814000C1-
    15 000000A2 814001C0804101C080-
    15 000000AB 4100C1814001C08041-
    15 000000B4 00C1814000C1814001-
    15 000000BD C0804100C1814001C0-
    15 000000C6 804101C0804100C181-
    15 000000CF 4001C0804100C18140-
    15 000000D8 00C1814001C0804101-
    15 000000E1 C0804100C1814000C1-
    15 000000EA 814001C0804100C181-
    15 000000F3 4001C0804101C08041-
    15 000000FC 00C18140           
    16 00000100 00C0C101C30302C2C6-     myLow  db 0x00, 0xc0, 0xc1, 0x01, 0xc3, 0x03, 0x02, 0xc2, 0xc6, 0x06, 0x07, 0xc7, 0x05, 0xc5, 0xc4, 0x04, 0xcc, 0x0c, 0x0d, 0xcd, 0x0f, 0xcf, 0xce, 0x0e, 0x0a, 0xca, 0xcb, 0x0b, 0xc9, 0x09, 0x08, 0xc8, 0xd8, 0x18, 0x19, 0xd9, 0x1b, 0xdb, 0xda, 0x1a, 0x1e, 0xde, 0xdf, 0x1f, 0xdd, 0x1d, 0x1c, 0xdc, 0x14, 0xd4, 0xd5, 0x15, 0xd7, 0x17, 0x16, 0xd6, 0xd2, 0x12, 0x13, 0xd3, 0x11, 0xd1, 0xd0, 0x10, 0xf0, 0x30, 0x31, 0xf1, 0x33, 0xf3, 0xf2, 0x32, 0x36, 0xf6, 0xf7, 0x37, 0xf5, 0x35, 0x34, 0xf4, 0x3c, 0xfc, 0xfd, 0x3d, 0xff, 0x3f, 0x3e, 0xfe, 0xfa, 0x3a, 0x3b, 0xfb, 0x39, 0xf9, 0xf8, 0x38, 0x28, 0xe8, 0xe9, 0x29, 0xeb, 0x2b, 0x2a, 0xea, 0xee, 0x2e, 0x2f, 0xef, 0x2d, 0xed, 0xec, 0x2c, 0xe4, 0x24, 0x25, 0xe5, 0x27, 0xe7, 0xe6, 0x26, 0x22, 0xe2, 0xe3, 0x23, 0xe1, 0x21, 0x20, 0xe0, 0xa0, 0x60, 0x61, 0xa1, 0x63, 0xa3, 0xa2, 0x62, 0x66, 0xa6, 0xa7, 0x67, 0xa5, 0x65, 0x64, 0xa4, 0x6c, 0xac, 0xad, 0x6d, 0xaf, 0x6f, 0x6e, 0xae, 0xaa, 0x6a, 0x6b, 0xab, 0x69, 0xa9, 0xa8, 0x68, 0x78, 0xb8, 0xb9, 0x79, 0xbb, 0x7b, 0x7a, 0xba, 0x...
    16 00000109 0607C705C5C404CC0C-
    16 00000112 0DCD0FCFCE0E0ACACB-
    16 0000011B 0BC90908C8D81819D9-
    16 00000124 1BDBDA1A1EDEDF1FDD-
    16 0000012D 1D1CDC14D4D515D717-
    16 00000136 16D6D21213D311D1D0-
    16 0000013F 10F03031F133F3F232-
    16 00000148 36F6F737F53534F43C-
    16 00000151 FCFD3DFF3F3EFEFA3A-
    16 0000015A 3BFB39F9F83828E8E9-
    16 00000163 29EB2B2AEAEE2E2FEF-
    16 0000016C 2DEDEC2CE42425E527-
    16 00000175 E7E62622E2E323E121-
    16 0000017E 20E0A06061A163A3A2-
    16 00000187 6266A6A767A56564A4-
    16 00000190 6CACAD6DAF6F6EAEAA-
    16 00000199 6A6BAB69A9A86878B8-
    16 000001A2 B979BB7B7ABABE7E7F-
    16 000001AB BF7DBDBC7CB47475B5-
    16 000001B4 77B7B67672B2B373B1-
    16 000001BD 7170B0509091519353-
    16 000001C6 529296565797559594-
    16 000001CF 549C5C5D9D5F9F9E5E-
    16 000001D8 5A9A9B5B9959589888-
    16 000001E1 4849894B8B8A4A4E8E-
    16 000001EA 8F4F8D4D4C8C448485-
    16 000001F3 458747468682424383-
    16 000001FC 41818040           
    17                                  
    18                                  
    19                                  
    20 00000200 646174612E74787400      fileName db "data.txt",0 ;
    21 00000209 0000000000000000        FD       dq 0 ; descriptor
    22                                  
    23 00000211 000000000000000000-     bufIn    db 0x401 dup 0
    23 0000021A 000000000000000000-
    23 00000223 000000000000000000-
    23 0000022C 000000000000000000-
    23 00000235 000000000000000000-
    23 0000023E 000000000000000000-
    23 00000247 000000000000000000-
    23 00000250 000000000000000000-
    23 00000259 000000000000000000-
    23 00000262 000000000000000000-
    23 0000026B 000000000000000000-
    23 00000274 000000000000000000-
    23 0000027D 000000000000000000-
    23 00000286 000000000000000000-
    23 0000028F 000000000000000000-
    23 00000298 000000000000000000-
    23 000002A1 000000000000000000-
    23 000002AA 000000000000000000-
    23 000002B3 000000000000000000-
    23 000002BC 000000000000000000-
    23 000002C5 000000000000000000-
    23 000002CE 000000000000000000-
    23 000002D7 000000000000000000-
    23 000002E0 000000000000000000-
    23 000002E9 000000000000000000-
    23 000002F2 000000000000000000-
    23 000002FB 000000000000000000-
    23 00000304 000000000000000000-
    23 0000030D 000000000000000000-
    23 00000316 000000000000000000-
    23 0000031F 000000000000000000-
    23 00000328 000000000000000000-
    23 00000331 000000000000000000-
    23 0000033A 000000000000000000-
    23 00000343 000000000000000000-
    23 0000034C 000000000000000000-
    23 00000355 000000000000000000-
    23 0000035E 000000000000000000-
    23 00000367 000000000000000000-
    23 00000370 000000000000000000-
    23 00000379 000000000000000000-
    23 00000382 000000000000000000-
    23 0000038B 000000000000000000-
    23 00000394 000000000000000000-
    23 0000039D 000000000000000000-
    23 000003A6 000000000000000000-
    23 000003AF 000000000000000000-
    23 000003B8 000000000000000000-
    23 000003C1 000000000000000000-
    23 000003CA 000000000000000000-
    23 000003D3 000000000000000000-
    23 000003DC 000000000000000000-
    23 000003E5 000000000000000000-
    23 000003EE 000000000000000000-
    23 000003F7 000000000000000000-
    23 00000400 000000000000000000-
    23 00000409 000000000000000000-
    23 00000412 000000000000000000-
    23 0000041B 000000000000000000-
    23 00000424 000000000000000000-
    23 0000042D 000000000000000000-
    23 00000436 000000000000000000-
    23 0000043F 000000000000000000-
    23 00000448 000000000000000000-
    23 00000451 000000000000000000-
    23 0000045A 000000000000000000-
    23 00000463 000000000000000000-
    23 0000046C 000000000000000000-
    23 00000475 000000000000000000-
    23 0000047E 000000000000000000-
    23 00000487 000000000000000000-
    23 00000490 000000000000000000-
    23 00000499 000000000000000000-
    23 000004A2 000000000000000000-
    23 000004AB 000000000000000000-
    23 000004B4 000000000000000000-
    23 000004BD 000000000000000000-
    23 000004C6 000000000000000000-
    23 000004CF 000000000000000000-
    23 000004D8 000000000000000000-
    23 000004E1 000000000000000000-
    23 000004EA 000000000000000000-
    23 000004F3 000000000000000000-
    23 000004FC 000000000000000000-
    23 00000505 000000000000000000-
    23 0000050E 000000000000000000-
    23 00000517 000000000000000000-
    23 00000520 000000000000000000-
    23 00000529 000000000000000000-
    23 00000532 000000000000000000-
    23 0000053B 000000000000000000-
    23 00000544 000000000000000000-
    23 0000054D 000000000000000000-
    23 00000556 000000000000000000-
    23 0000055F 000000000000000000-
    23 00000568 000000000000000000-
    23 00000571 000000000000000000-
    23 0000057A 000000000000000000-
    23 00000583 000000000000000000-
    23 0000058C 000000000000000000-
    23 00000595 000000000000000000-
    23 0000059E 000000000000000000-
    23 000005A7 000000000000000000-
    23 000005B0 000000000000000000-
    23 000005B9 000000000000000000-
    23 000005C2 000000000000000000-
    23 000005CB 000000000000000000-
    23 000005D4 000000000000000000-
    23 000005DD 000000000000000000-
    23 000005E6 000000000000000000-
    23 000005EF 000000000000000000-
    23 000005F8 000000000000000000-
    23 00000601 000000000000000000-
    23 0000060A 0000000000000000   
    24 00000612 0A0D                    space	 db 10,13
    25 00000614 000000000000000000-     dataBin  db 0x111 dup 0
    25 0000061D 000000000000000000-
    25 00000626 000000000000000000-
    25 0000062F 000000000000000000-
    25 00000638 000000000000000000-
    25 00000641 000000000000000000-
    25 0000064A 000000000000000000-
    25 00000653 000000000000000000-
    25 0000065C 000000000000000000-
    25 00000665 000000000000000000-
    25 0000066E 000000000000000000-
    25 00000677 000000000000000000-
    25 00000680 000000000000000000-
    25 00000689 000000000000000000-
    25 00000692 000000000000000000-
    25 0000069B 000000000000000000-
    25 000006A4 000000000000000000-
    25 000006AD 000000000000000000-
    25 000006B6 000000000000000000-
    25 000006BF 000000000000000000-
    25 000006C8 000000000000000000-
    25 000006D1 000000000000000000-
    25 000006DA 000000000000000000-
    25 000006E3 000000000000000000-
    25 000006EC 000000000000000000-
    25 000006F5 000000000000000000-
    25 000006FE 000000000000000000-
    25 00000707 000000000000000000-
    25 00000710 000000000000000000-
    25 00000719 000000000000000000-
    25 00000722 000000             
    26 00000725 00                      dataLen	 db 0
    27                                  
    28                                  bufferlen equ 0x400
    29 00000726 000000000000000000-     buf2     db 20 dup 0
    29 0000072F 000000000000000000-
    29 00000738 0000               
    30 0000073A 0A0D73746172743A20-     fstart     db   10,13,"start: %d",10,13,0
    30 00000743 25640A0D00         
    31 00000748 73746F70203A202564-     fend       db   "stop : %d",10,13,0
    31 00000751 0A0D00             
    32 00000754 64656C74613A202564-     fdelta     db   "delta: %d",10,13,0
    32 0000075D 0A0D00             
    33 00000760 63796B6C693A202564-     fcycles    db   "cykli: %d",10,13,0
    33 00000769 0A0D00             
    34 0000076C 726573756C743A2030-     fresult    db   "result: 0x%X",10,13,0
    34 00000775 7825580A0D00       
    35                                  
    36 0000077B FF                      crcHigh	   db   0xff;
    37 0000077C FF                      crcLow	   db   0xff;
    38                                  
    39                                  
    40 0000077D 0000000000000000        counter	   dq 0
    41 00000785 2020202000              now		   db "    ",0
    42                                  
    43                                  
    44                                  
    45 0000078A 0A0D4F4B210A0D00        success_Read db 10,13,"OK!",10,13,0
    46                                  
    47 00000792 0A0D77637A7974756A-     msg db 10,13 , "wczytuje plik: data.txt", 10,13,0
    47 0000079B 6520706C696B3A2064-
    47 000007A4 6174612E7478740A0D-
    47 000007AD 00                 
    48                                  
    49                                  
    50                                  
    51                                  section .text
    52                                  global main
    53                                  main:
    54                                  
    55                                  	; args
    56                                  	;mov ecx, [esp+4] ; argc
    57                                  	;mov edx, [esp+8] ; argv
    58                                  
    59 00000000 4A8B740608              	mov rsi, qword [rsi+r8+8] ; argv
    60                                  	
    61 00000005 B800000000              	mov rax, 0
    62 0000000A E8ED020000              	call parseParam ; rsi to rax
    63 0000000F 4989C7                  	mov r15,rax
    64                                  	
    65 00000012 48BE-                   	mov rsi, buf2
    65 00000014 [2607000000000000] 
    66 0000001C 488906                  	mov [rsi], rax
    67                                  	
    68 0000001F E8FA000000              	call printString
    69                                  
    70                                  
    71                                  
    72                                  
    73                                  
    74                                  
    75                                  
    76                                  
    77 00000024 48BE-                   	mov rsi, msg
    77 00000026 [9207000000000000] 
    78 0000002E E8EB000000              	call printString
    79                                  	
    80                                  	; open file
    81 00000033 48BF-                   	mov rdi,fileName
    81 00000035 [0002000000000000] 
    82 0000003D E815010000              	call openFile
    83                                  	
    84                                  	; save descriptor
    85 00000042 48890425[09020000]      	mov qword [FD], rax
    86                                  	
    87                                  	; read file
    88 0000004A 488B3C25[09020000]      	mov rdi, qword [FD]
    89 00000052 48BE-                   	mov rsi, bufIn
    89 00000054 [1102000000000000] 
    90 0000005C BA00040000              	mov rdx, bufferlen
    91 00000061 E8E9000000              	call readFile
    92                                  
    93                                  	; close fileHigh
    94 00000066 488B3C25[09020000]      	mov rdi, qword [FD]	
    95 0000006E E8F1000000              	call closeFile
    96                                  	
    97                                  	; parse to binary
    98 00000073 E8F4000000              	call parseFile
    99                                  
   100                                  	; print dataIn
   101 00000078 48BE-                   	mov rsi, bufIn
   101 0000007A [1102000000000000] 
   102 00000082 E897000000              	call printString
   103                                  
   104                                  	; print
   105 00000087 48BE-                   	mov rsi, space
   105 00000089 [1206000000000000] 
   106 00000091 E888000000              	call printString
   107                                  
   108                                  
   109 00000096 B800000000              	mov rax,0
   110 0000009B 48BF-                   	mov rdi, fcycles
   110 0000009D [6007000000000000] 
   111 000000A5 4C89FE                  	mov rsi,r15
   112 000000A8 E8(00000000)            	call printf
   113                                  
   114                                  
   115                                  	; start time
   116                                  	
   117                                  
   118 000000AD E8F8020000                  call timeToAX
   119 000000B2 4989C5                      mov r13, rax
   120                                  
   121                                  
   122 000000B5 B800000000              	mov rax,0
   123 000000BA 48BF-                   	mov rdi, fstart
   123 000000BC [3A07000000000000] 
   124 000000C4 4C89EE                  	mov rsi,r13
   125 000000C7 E8(00000000)            	call printf
   126                                  
   127                                  
   128                                  
   129 000000CC E85C020000              		call CRC  
   130                                  
   131                                  	; end time
   132 000000D1 E8D4020000              	call timeToAX
   133 000000D6 4989C6                      mov r14, rax
   134                                  
   135 000000D9 B800000000              	mov rax,0
   136 000000DE 48BF-                   	mov rdi, fstart
   136 000000E0 [3A07000000000000] 
   137 000000E8 4C89F6                  	mov rsi,r14
   138 000000EB E8(00000000)            	call printf
   139                                  	
   140                                  	; delta
   141 000000F0 4D29EE                  	sub r14,r13
   142 000000F3 B800000000              	mov rax,0
   143 000000F8 48BF-                   	mov rdi, fdelta
   143 000000FA [5407000000000000] 
   144 00000102 4C89F6                  	mov rsi,r14
   145 00000105 E8(00000000)            	call printf
   146                                  	
   147                                  	
   148 0000010A E833000000              	call exit
   149 0000010F C3                      ret
   150                                  
   151                                  
   152                                  
   153                                  
   154                                  
   155                                  
   156                                  
   157                                  
   158                                  
   159                                  
   160                                  ; close file
   161 00000110 488B3C25[09020000]      mov rdi, qword[FD]
   162 00000118 E847000000              call closeFile
   163                                  
   164 0000011D C3                      ret
   165                                  
   166                                  ;
   167                                  
   168                                  
   169                                  
   170                                  
   171                                  
   172                                  
   173                                  
   174                                  
   175                                  
   176                                  
   177                                  
   178                                  
   179                                  
   180                                  
   181                                  
   182                                  
   183                                  
   184                                  global printString ; rsi <= stringAddress
   185                                  printString:
   186                                      ; rsi msg addres
   187 0000011E 4989F4                  	mov r12,rsi
   188 00000121 BA00000000              	mov rdx,0
   189                                  
   190                                  	strLoop:
   191 00000126 41803C2400              	   cmp byte[r12],0
   192 0000012B 7408                    	   je loopEnd;
   193 0000012D 48FFC2                  	   inc rdx
   194 00000130 49FFC4                  	   inc r12
   195 00000133 EBF1                    	   jmp strLoop	
   196                                  	   
   197                                  	loopEnd:
   198 00000135 B801000000              	mov rax,1 ; print
   199 0000013A BF01000000              	mov rdi,1 ; to std_out
   200 0000013F 0F05                    	syscall
   201                                  
   202 00000141 C3                      ret
   203                                  
   204                                  
   205                                  
   206                                  
   207                                  
   208                                  global exit
   209                                  exit:
   210 00000142 B83C000000              	mov rax,60
   211 00000147 BF00000000              	mov rdi,0
   212 0000014C 0F05                    	syscall
   213                                  
   214 0000014E C3                      ret
   215                                  	
   216                                  	
   217                                  ; ---- funkcje manipulujace plikiem
   218                                  ; ---------------------------------
   219                                  
   220                                  
   221                                  global readFile
   222                                  readFile:
   223 0000014F B800000000              	mov rax, NR_read
   224 00000154 0F05                    	syscall
   225 00000156 C3                      ret
   226                                  
   227                                  ; ---
   228                                  
   229                                  
   230                                  global openFile
   231                                  openFile:
   232 00000157 B802000000              	mov rax, NR_open
   233 0000015C BE00000000              	mov rsi, O_RDONLY
   234 00000161 0F05                    	syscall
   235 00000163 C3                      ret
   236                                  
   237                                  
   238                                  global closeFile
   239                                  closeFile:
   240 00000164 B803000000              	mov rax,NR_close
   241 00000169 0F05                    	syscall
   242 0000016B C3                      ret
   243                                  
   244                                  
   245                                  global parseFile ; 	mov rsi, bufIn
   246                                  parseFile:
   247                                  	
   248 0000016C 48BE-                   	mov rsi, bufIn 
   248 0000016E [1102000000000000] 
   249 00000176 48BF-                   	mov rdi, dataBin
   249 00000178 [1406000000000000] 
   250                                  	
   251                                  	parseChar:
   252 00000180 66B80000                		mov ax,0
   253 00000184 803E00                  		cmp byte [rsi],0
   254 00000187 741A                    		je parseEnd
   255                                  		
   256 00000189 E816000000              		call charToInt
   257 0000018E 48FFC6                  		inc rsi
   258                                  		
   259 00000191 E80E000000              		call charToInt
   260 00000196 48FFC6                  		inc rsi
   261 00000199 8807                    		mov byte[rdi],al
   262 0000019B 48FFC7                  		inc rdi
   263 0000019E 48FFC6                  		inc rsi
   264 000001A1 EBDD                    		jmp parseChar
   265                                  	
   266                                  	parseEnd:
   267                                  	
   268                                  	
   269                                  
   270                                  
   271                                  parseFileLoop:
   272                                  
   273                                  
   274 000001A3 C3                      ret 
   275                                  
   276                                  
   277                                  
   278                                  global charToInt ; char [rsi]
   279                                  charToInt:
   280 000001A4 803E30                  	cmp byte[rsi],0x30
   281 000001A7 0F84BE000000            	je loop0
   282                                  	
   283 000001AD 803E31                  	cmp byte[rsi],0x31
   284 000001B0 0F84BE000000            	je loop1
   285                                  
   286 000001B6 803E32                  	cmp byte[rsi],0x32
   287 000001B9 0F84BE000000            	je loop2
   288                                  
   289 000001BF 803E33                  	cmp byte[rsi],0x33
   290 000001C2 0F84BE000000            	je loop3
   291                                  
   292 000001C8 803E34                  	cmp byte[rsi],0x34
   293 000001CB 0F84BE000000            	je loop4
   294                                  	
   295 000001D1 803E35                  	cmp byte[rsi],0x35
   296 000001D4 0F84BE000000            	je loop5
   297                                  
   298 000001DA 803E36                  	cmp byte[rsi],0x36
   299 000001DD 0F84BE000000            	je loop6
   300                                  
   301 000001E3 803E37                  	cmp byte[rsi],0x37
   302 000001E6 0F84BE000000            	je loop7
   303                                  	
   304 000001EC 803E38                  	cmp byte[rsi],0x38
   305 000001EF 0F84BE000000            	je loop8
   306                                  	
   307 000001F5 803E39                  	cmp byte[rsi],0x39
   308 000001F8 0F84BE000000            	je loop9
   309                                  
   310 000001FE 803E41                  	cmp byte[rsi],0x41
   311 00000201 0F84BE000000            	je loopa
   312                                  
   313 00000207 803E61                  	cmp byte[rsi],0x61
   314 0000020A 0F84B5000000            	je loopa
   315                                  	
   316 00000210 803E42                  	cmp byte[rsi],0x42
   317 00000213 0F84B5000000            	je loopb
   318                                  	
   319 00000219 803E62                  	cmp byte[rsi],0x62
   320 0000021C 0F84AC000000            	je loopb
   321                                  
   322 00000222 803E43                  	cmp byte[rsi],0x43
   323 00000225 0F84AC000000            	je loopc
   324                                  
   325 0000022B 803E63                  	cmp byte[rsi],0x63
   326 0000022E 0F84A3000000            	je loopc
   327                                  	
   328 00000234 803E44                  	cmp byte[rsi],0x44
   329 00000237 0F84A3000000            	je loop_d
   330                                  	
   331 0000023D 803E64                  	cmp byte[rsi],0x64
   332 00000240 0F849A000000            	je loop_d
   333                                  
   334 00000246 803E45                  	cmp byte[rsi],0x45
   335 00000249 0F849A000000            	je loop_e
   336                                  
   337 0000024F 803E65                  	cmp byte[rsi],0x65
   338 00000252 0F8491000000            	je loop_e
   339                                  	
   340 00000258 803E46                  	cmp byte[rsi],0x46
   341 0000025B 0F8491000000            	je loopf
   342                                  	
   343 00000261 803E66                  	cmp byte[rsi],0x66
   344 00000264 0F8488000000            	je loopf
   345                                  
   346 0000026A C3                      	ret
   347                                  	
   348                                  	loop0:
   349 0000026B 66C1E004                	shl ax,4
   350 0000026F 6683C000                	add ax,0
   351 00000273 C3                      	ret
   352                                  
   353                                  	loop1:
   354 00000274 66C1E004                	shl ax,4	
   355 00000278 6683C001                	add ax,1
   356 0000027C C3                      	ret
   357                                  	
   358                                  	loop2:
   359 0000027D 66C1E004                	shl ax,4	
   360 00000281 6683C002                	add ax,2
   361 00000285 C3                      	ret
   362                                  	
   363                                  	loop3:
   364 00000286 66C1E004                	shl ax,4	
   365 0000028A 6683C003                	add ax,3
   366 0000028E C3                      	ret
   367                                  
   368                                  	loop4:
   369 0000028F 66C1E004                	shl ax,4	
   370 00000293 6683C004                	add ax,4
   371 00000297 C3                      	ret
   372                                  	
   373                                  	loop5:
   374 00000298 66C1E004                	shl ax,4	
   375 0000029C 6683C005                	add ax,5
   376 000002A0 C3                      	ret
   377                                  	
   378                                  	loop6:
   379 000002A1 66C1E004                	shl ax,4	
   380 000002A5 6683C006                	add ax,6
   381 000002A9 C3                      	ret
   382                                  	
   383                                  	loop7:
   384 000002AA 66C1E004                	shl ax,4	
   385 000002AE 6683C007                	add ax,7
   386 000002B2 C3                      	ret
   387                                  	
   388                                  	loop8:
   389 000002B3 66C1E004                	shl ax,4	
   390 000002B7 6683C008                	add ax,8
   391 000002BB C3                      	ret
   392                                  	
   393                                  	loop9:
   394 000002BC 66C1E004                	shl ax,4	
   395 000002C0 6683C009                	add ax,9
   396 000002C4 C3                      	ret
   397                                  	
   398                                  	loopa:
   399 000002C5 66C1E004                	shl ax,4	
   400 000002C9 6683C00A                	add ax,0x0a
   401 000002CD C3                      	ret
   402                                  	
   403                                  	loopb:
   404 000002CE 66C1E004                	shl ax,4	
   405 000002D2 6683C00B                	add ax,0x0b
   406 000002D6 C3                      	ret
   407                                  	
   408                                  	loopc:
   409 000002D7 66C1E004                	shl ax,4	
   410 000002DB 6683C00C                	add ax,0x0c
   411 000002DF C3                      	ret
   412                                  	
   413                                  	loop_d:
   414 000002E0 66C1E004                	shl ax,4	
   415 000002E4 6683C00D                	add ax,0x0d	
   416 000002E8 C3                      	ret
   417                                  	
   418                                  	loop_e:
   419 000002E9 66C1E004                	shl ax,4	
   420 000002ED 6683C00E                	add ax,0x0e
   421 000002F1 C3                      	ret
   422                                  	
   423                                  	loopf:
   424 000002F2 66C1E004                	shl ax,4	
   425 000002F6 6683C00F                	add ax,0x0f
   426 000002FA C3                      	ret
   427                                  
   428 000002FB C3                      ret
   429                                  
   430                                  
   431                                  global parseParam ; rsi
   432                                  parseParam:
   433                                  
   434 000002FC B800000000              	mov rax, 0
   435 00000301 66B90A00                	mov cx,0x0a
   436                                  	
   437                                  	parseParamLoop:
   438 00000305 803E00                  		cmp byte[rsi],0
   439 00000308 741A                    		je 	parseParamEnd
   440 0000030A 803E14                  		cmp byte[rsi],20
   441 0000030D 7415                    		je 	parseParamEnd
   442                                  	
   443 0000030F BB00000000              	mov rbx,0
   444 00000314 8A1E                    	mov bl, byte[rsi]
   445 00000316 80EB30                  	sub bl, 0x030
   446 00000319 66F7E1                  	mul cx
   447 0000031C 4801D8                  	add rax,rbx
   448 0000031F 48FFC6                  	inc rsi
   449 00000322 EBE1                    	jmp parseParamLoop
   450                                  	
   451                                  	parseParamEnd:
   452                                  
   453 00000324 48890425[7D070000]      	mov [counter],rax
   454                                  
   455 0000032C C3                      ret
   456                                  
   457                                  
   458                                  global CRC
   459                                  CRC:
   460                                  
   461                                  	; check len of binaryData
   462 0000032D 48B8-                   	mov rax, dataBin
   462 0000032F [1406000000000000] 
   463 00000337 B500                    	mov ch,0 
   464 00000339 48FFC8                  	dec rax
   465 0000033C FECD                    	dec ch
   466                                  	 lenLoop:
   467 0000033E 48FFC0                  	 inc rax
   468 00000341 FEC5                    	 inc ch
   469 00000343 803800                  	 cmp byte [rax],0
   470 00000346 75F6                    	 jne lenLoop	
   471 00000348 882C25[25070000]        	mov byte[ dataLen ], ch
   472 0000034F B800000000              	mov rax,0
   473                                  
   474                                   
   475                                      ; ch <- length	
   476                                  	; ax  <- HiByte = 0xff
   477                                  	; al  <- LoByte = 0xff
   478                                  	; message[i] <- [dataBin+rdx]
   479                                  	 
   480                                  	
   481                                  
   482                                  
   483                                  	; R15 - loop len
   484                                  	; 10^6 loop
   485                                  	
   486                                  	CRCLoops:
   487 00000354 B4FF                    	mov ah, 0xff
   488 00000356 B0FF                    	mov al, 0xff
   489 00000358 48BB-                   	mov rbx , dataBin ; Message
   489 0000035A [1406000000000000] 
   490 00000362 8A2C25[25070000]        	mov ch, [ dataLen ]
   491 00000369 FEC5                    	inc ch
   492 0000036B BA00000000              	mov rdx,0
   493                                  
   494                                  		; CRC !!!
   495                                  		oneCRC:
   496                                  	
   497 00000370 448A0B                  		mov R9B, byte [rbx]   ; dh = *pMessage
   498 00000373 48FFC3                  			 inc rbx    ; Message++
   499 00000376 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   500 00000378 4430CA                  		xor dl, R9B		; index = dl			     	;		Index  = HiByte ^ *pMessage++; 
   501                                  		
   502                                  		
   503 0000037B 8AA2[00000000]          		mov ah,byte [ myHigh + rdx]
   504 00000381 30C4                    		xor ah,al		;		HiByte = LoByte ^ aCRCHi[Index];
   505                                  		
   506 00000383 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   507                                  						;		LoByte = aCRCLo[Index]; 
   508                                  
   509 00000389 FECD                    		dec ch
   510 0000038B 75E3                    		jnz oneCRC
   511                                  		; CRC !!
   512                                  		; HiByte = AH
   513                                  		; LoByte = AL
   514                                  		; Result = AX
   515                                  		;		return (HiByte << 8 | LoByte); 
   516                                  		
   517                                  	; / 10^6 loop	
   518 0000038D 49FFCF                  	dec r15
   519 00000390 75C2                    	jnz CRCLoops
   520                                  	
   521                                  	; print result
   522 00000392 48BF-                   	mov rdi, fresult
   522 00000394 [6C07000000000000] 
   523 0000039C 4889C6                  	mov rsi,rax
   524 0000039F B800000000              	mov rax,0
   525 000003A4 E8(00000000)            	call printf
   526                                  	
   527                                  	
   528 000003A9 C3                      ret
   529                                  
   530                                   
   531                                   
   532                                  global timeToAX
   533                                  timeToAX:
   534                                  
   535 000003AA E8(00000000)            	call clock_gettime
   536 000003AF 4889F8                  mov rax,rdi
   537                                  ;	push rdi
   538                                  ;	mov rax, 201
   539                                  ;	xor rdi, rdi        
   540                                  ;	syscall
   541                                  ;	pop rdi
   542 000003B2 C3                      ret 
