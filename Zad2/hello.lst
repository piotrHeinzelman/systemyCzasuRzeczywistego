     1                                  extern clock_gettime	
     2                                  extern _localtime
     3                                  extern printf
     4                                  section .data
     5                                  
     6                                  NR_read  equ 0
     7                                  NR_write equ 1
     8                                  NR_open  equ 2
     9                                  NR_close equ 3
    10                                  
    11                                  O_RDONLY equ 000000q
    12                                  
    13                                  
    14                                  
    15 00000000 00C1814001C0804101-     HIGH db 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01...
    15 00000009 C0804100C1814001C0-
    15 00000012 804100C1814000C181-
    15 0000001B 4001C0804101C08041-
    15 00000024 00C1814000C1814001-
    15 0000002D C0804100C1814001C0-
    15 00000036 804101C0804100C181-
    15 0000003F 4001C0804100C18140-
    15 00000048 00C1814001C0804100-
    15 00000051 C1814001C0804101C0-
    15 0000005A 804100C1814000C181-
    15 00000063 4001C0804101C08041-
    15 0000006C 00C1814001C0804100-
    15 00000075 C1814000C1814001C0-
    15 0000007E 804101C0804100C181-
    15 00000087 4000C1814001C08041-
    15 00000090 00C1814001C0804101-
    15 00000099 C0804100C1814000C1-
    15 000000A2 814001C0804101C080-
    15 000000AB 4100C1814001C08041-
    15 000000B4 00C1814000C1814001-
    15 000000BD C0804100C1814001C0-
    15 000000C6 804101C0804100C181-
    15 000000CF 4001C0804100C18140-
    15 000000D8 00C1814001C0804101-
    15 000000E1 C0804100C1814000C1-
    15 000000EA 814001C0804100C181-
    15 000000F3 4001C0804101C08041-
    15 000000FC 00C18140           
    16 00000100 00C0C101C30302C2C6-     LOW  db 0x00, 0xc0, 0xc1, 0x01, 0xc3, 0x03, 0x02, 0xc2, 0xc6, 0x06, 0x07, 0xc7, 0x05, 0xc5, 0xc4, 0x04, 0xcc, 0x0c, 0x0d, 0xcd, 0x0f, 0xcf, 0xce, 0x0e, 0x0a, 0xca, 0xcb, 0x0b, 0xc9, 0x09, 0x08, 0xc8, 0xd8, 0x18, 0x19, 0xd9, 0x1b, 0xdb, 0xda, 0x1a, 0x1e, 0xde, 0xdf, 0x1f, 0xdd, 0x1d, 0x1c, 0xdc, 0x14, 0xd4, 0xd5, 0x15, 0xd7, 0x17, 0x16, 0xd6, 0xd2, 0x12, 0x13, 0xd3, 0x11, 0xd1, 0xd0, 0x10, 0xf0, 0x30, 0x31, 0xf1, 0x33, 0xf3, 0xf2, 0x32, 0x36, 0xf6, 0xf7, 0x37, 0xf5, 0x35, 0x34, 0xf4, 0x3c, 0xfc, 0xfd, 0x3d, 0xff, 0x3f, 0x3e, 0xfe, 0xfa, 0x3a, 0x3b, 0xfb, 0x39, 0xf9, 0xf8, 0x38, 0x28, 0xe8, 0xe9, 0x29, 0xeb, 0x2b, 0x2a, 0xea, 0xee, 0x2e, 0x2f, 0xef, 0x2d, 0xed, 0xec, 0x2c, 0xe4, 0x24, 0x25, 0xe5, 0x27, 0xe7, 0xe6, 0x26, 0x22, 0xe2, 0xe3, 0x23, 0xe1, 0x21, 0x20, 0xe0, 0xa0, 0x60, 0x61, 0xa1, 0x63, 0xa3, 0xa2, 0x62, 0x66, 0xa6, 0xa7, 0x67, 0xa5, 0x65, 0x64, 0xa4, 0x6c, 0xac, 0xad, 0x6d, 0xaf, 0x6f, 0x6e, 0xae, 0xaa, 0x6a, 0x6b, 0xab, 0x69, 0xa9, 0xa8, 0x68, 0x78, 0xb8, 0xb9, 0x79, 0xbb, 0x7b, 0x7a, 0xba, 0xbe...
    16 00000109 0607C705C5C404CC0C-
    16 00000112 0DCD0FCFCE0E0ACACB-
    16 0000011B 0BC90908C8D81819D9-
    16 00000124 1BDBDA1A1EDEDF1FDD-
    16 0000012D 1D1CDC14D4D515D717-
    16 00000136 16D6D21213D311D1D0-
    16 0000013F 10F03031F133F3F232-
    16 00000148 36F6F737F53534F43C-
    16 00000151 FCFD3DFF3F3EFEFA3A-
    16 0000015A 3BFB39F9F83828E8E9-
    16 00000163 29EB2B2AEAEE2E2FEF-
    16 0000016C 2DEDEC2CE42425E527-
    16 00000175 E7E62622E2E323E121-
    16 0000017E 20E0A06061A163A3A2-
    16 00000187 6266A6A767A56564A4-
    16 00000190 6CACAD6DAF6F6EAEAA-
    16 00000199 6A6BAB69A9A86878B8-
    16 000001A2 B979BB7B7ABABE7E7F-
    16 000001AB BF7DBDBC7CB47475B5-
    16 000001B4 77B7B67672B2B373B1-
    16 000001BD 7170B0509091519353-
    16 000001C6 529296565797559594-
    16 000001CF 549C5C5D9D5F9F9E5E-
    16 000001D8 5A9A9B5B9959589888-
    16 000001E1 4849894B8B8A4A4E8E-
    16 000001EA 8F4F8D4D4C8C448485-
    16 000001F3 458747468682424383-
    16 000001FC 41818040           
    17                                  
    18                                  
    19                                  
    20 00000200 646174612E74787400      fileName db "data.txt",0 ;
    21 00000209 0000000000000000        FD       dq 0 ; descriptor
    22                                  
    23 00000211 000000000000000000-     bufIn    db 0x401 dup 0
    23 0000021A 000000000000000000-
    23 00000223 000000000000000000-
    23 0000022C 000000000000000000-
    23 00000235 000000000000000000-
    23 0000023E 000000000000000000-
    23 00000247 000000000000000000-
    23 00000250 000000000000000000-
    23 00000259 000000000000000000-
    23 00000262 000000000000000000-
    23 0000026B 000000000000000000-
    23 00000274 000000000000000000-
    23 0000027D 000000000000000000-
    23 00000286 000000000000000000-
    23 0000028F 000000000000000000-
    23 00000298 000000000000000000-
    23 000002A1 000000000000000000-
    23 000002AA 000000000000000000-
    23 000002B3 000000000000000000-
    23 000002BC 000000000000000000-
    23 000002C5 000000000000000000-
    23 000002CE 000000000000000000-
    23 000002D7 000000000000000000-
    23 000002E0 000000000000000000-
    23 000002E9 000000000000000000-
    23 000002F2 000000000000000000-
    23 000002FB 000000000000000000-
    23 00000304 000000000000000000-
    23 0000030D 000000000000000000-
    23 00000316 000000000000000000-
    23 0000031F 000000000000000000-
    23 00000328 000000000000000000-
    23 00000331 000000000000000000-
    23 0000033A 000000000000000000-
    23 00000343 000000000000000000-
    23 0000034C 000000000000000000-
    23 00000355 000000000000000000-
    23 0000035E 000000000000000000-
    23 00000367 000000000000000000-
    23 00000370 000000000000000000-
    23 00000379 000000000000000000-
    23 00000382 000000000000000000-
    23 0000038B 000000000000000000-
    23 00000394 000000000000000000-
    23 0000039D 000000000000000000-
    23 000003A6 000000000000000000-
    23 000003AF 000000000000000000-
    23 000003B8 000000000000000000-
    23 000003C1 000000000000000000-
    23 000003CA 000000000000000000-
    23 000003D3 000000000000000000-
    23 000003DC 000000000000000000-
    23 000003E5 000000000000000000-
    23 000003EE 000000000000000000-
    23 000003F7 000000000000000000-
    23 00000400 000000000000000000-
    23 00000409 000000000000000000-
    23 00000412 000000000000000000-
    23 0000041B 000000000000000000-
    23 00000424 000000000000000000-
    23 0000042D 000000000000000000-
    23 00000436 000000000000000000-
    23 0000043F 000000000000000000-
    23 00000448 000000000000000000-
    23 00000451 000000000000000000-
    23 0000045A 000000000000000000-
    23 00000463 000000000000000000-
    23 0000046C 000000000000000000-
    23 00000475 000000000000000000-
    23 0000047E 000000000000000000-
    23 00000487 000000000000000000-
    23 00000490 000000000000000000-
    23 00000499 000000000000000000-
    23 000004A2 000000000000000000-
    23 000004AB 000000000000000000-
    23 000004B4 000000000000000000-
    23 000004BD 000000000000000000-
    23 000004C6 000000000000000000-
    23 000004CF 000000000000000000-
    23 000004D8 000000000000000000-
    23 000004E1 000000000000000000-
    23 000004EA 000000000000000000-
    23 000004F3 000000000000000000-
    23 000004FC 000000000000000000-
    23 00000505 000000000000000000-
    23 0000050E 000000000000000000-
    23 00000517 000000000000000000-
    23 00000520 000000000000000000-
    23 00000529 000000000000000000-
    23 00000532 000000000000000000-
    23 0000053B 000000000000000000-
    23 00000544 000000000000000000-
    23 0000054D 000000000000000000-
    23 00000556 000000000000000000-
    23 0000055F 000000000000000000-
    23 00000568 000000000000000000-
    23 00000571 000000000000000000-
    23 0000057A 000000000000000000-
    23 00000583 000000000000000000-
    23 0000058C 000000000000000000-
    23 00000595 000000000000000000-
    23 0000059E 000000000000000000-
    23 000005A7 000000000000000000-
    23 000005B0 000000000000000000-
    23 000005B9 000000000000000000-
    23 000005C2 000000000000000000-
    23 000005CB 000000000000000000-
    23 000005D4 000000000000000000-
    23 000005DD 000000000000000000-
    23 000005E6 000000000000000000-
    23 000005EF 000000000000000000-
    23 000005F8 000000000000000000-
    23 00000601 000000000000000000-
    23 0000060A 0000000000000000   
    24 00000612 0A0D                    space	 db 10,13
    25 00000614 000000000000000000-     dataBin  db 0x111 dup 0
    25 0000061D 000000000000000000-
    25 00000626 000000000000000000-
    25 0000062F 000000000000000000-
    25 00000638 000000000000000000-
    25 00000641 000000000000000000-
    25 0000064A 000000000000000000-
    25 00000653 000000000000000000-
    25 0000065C 000000000000000000-
    25 00000665 000000000000000000-
    25 0000066E 000000000000000000-
    25 00000677 000000000000000000-
    25 00000680 000000000000000000-
    25 00000689 000000000000000000-
    25 00000692 000000000000000000-
    25 0000069B 000000000000000000-
    25 000006A4 000000000000000000-
    25 000006AD 000000000000000000-
    25 000006B6 000000000000000000-
    25 000006BF 000000000000000000-
    25 000006C8 000000000000000000-
    25 000006D1 000000000000000000-
    25 000006DA 000000000000000000-
    25 000006E3 000000000000000000-
    25 000006EC 000000000000000000-
    25 000006F5 000000000000000000-
    25 000006FE 000000000000000000-
    25 00000707 000000000000000000-
    25 00000710 000000000000000000-
    25 00000719 000000000000000000-
    25 00000722 000000             
    26                                  bufferlen equ 0x400
    27 00000725 000000000000000000-     buf2     db 20 dup 0
    27 0000072E 000000000000000000-
    27 00000737 0000               
    28 00000739 0A0D73746172743A20-     fstart     db   10,13,"start: %d",10,13,0
    28 00000742 25640A0D00         
    29 00000747 73746F70203A202564-     fend       db   "stop : %d",10,13,0
    29 00000750 0A0D00             
    30 00000753 64656C74613A202564-     fdelta     db   "delta: %d",10,13,0
    30 0000075C 0A0D00             
    31 0000075F 63796B6C693A202564-     fcycles    db   "cykli: %d",10,13,0
    31 00000768 0A0D00             
    32                                  
    33 0000076B 0000000000000000        counter	   dq	0
    34 00000773 2020202000              now		   db "    ",0
    35                                  
    36                                  
    37                                  
    38 00000778 0A0D4F4B210A0D00        success_Read db 10,13,"OK!",10,13,0
    39                                  
    40 00000780 0A0D77637A7974756A-     msg db 10,13 , "wczytuje plik: data.txt", 10,13,0
    40 00000789 6520706C696B3A2064-
    40 00000792 6174612E7478740A0D-
    40 0000079B 00                 
    41                                  
    42                                  
    43                                  
    44                                  section .text
    45                                  global main
    46                                  main:
    47                                  
    48                                  	; args
    49                                  	;mov ecx, [esp+4] ; argc
    50                                  	;mov edx, [esp+8] ; argv
    51                                  
    52 00000000 4A8B740608              	mov rsi, qword [rsi+r8+8] ; argv
    53                                  	
    54 00000005 B800000000              	mov rax, 0
    55 0000000A E8FA020000              	call parseParam ; rsi to rax
    56 0000000F 4989C7                  	mov r15,rax
    57                                  	
    58 00000012 48BE-                   	mov rsi, buf2
    58 00000014 [2507000000000000] 
    59 0000001C 488906                  	mov [rsi], rax
    60                                  	
    61 0000001F E807010000              	call printString
    62                                  
    63                                  
    64                                  
    65                                  
    66                                  
    67                                  
    68                                  
    69                                  
    70 00000024 48BE-                   	mov rsi, msg
    70 00000026 [8007000000000000] 
    71 0000002E E8F8000000              	call printString
    72                                  	
    73                                  	; open file
    74 00000033 48BF-                   	mov rdi,fileName
    74 00000035 [0002000000000000] 
    75 0000003D E822010000              	call openFile
    76                                  	
    77                                  	; save descriptor
    78 00000042 48890425[09020000]      	mov qword [FD], rax
    79                                  	
    80                                  	; read file
    81 0000004A 488B3C25[09020000]      	mov rdi, qword [FD]
    82 00000052 48BE-                   	mov rsi, bufIn
    82 00000054 [1102000000000000] 
    83 0000005C BA00040000              	mov rdx, bufferlen
    84 00000061 E8F6000000              	call readFile
    85                                  
    86                                  	; close file
    87 00000066 488B3C25[09020000]      	mov rdi, qword [FD]	
    88 0000006E E8FE000000              	call closeFile
    89                                  	
    90                                  	; parse to binary
    91 00000073 E801010000              	call parseFile
    92                                  
    93                                  	; print dataIn
    94 00000078 48BE-                   	mov rsi, bufIn
    94 0000007A [1102000000000000] 
    95 00000082 E8A4000000              	call printString
    96                                  
    97                                  	; print
    98 00000087 48BE-                   	mov rsi, space
    98 00000089 [1206000000000000] 
    99 00000091 E895000000              	call printString
   100                                  
   101                                  
   102                                  
   103                                  
   104 00000096 B800000000              	mov rax,0
   105 0000009B 48BF-                   	mov rdi, fcycles
   105 0000009D [5F07000000000000] 
   106 000000A5 4C89FE                  	mov rsi,r15
   107 000000A8 E8(00000000)            	call printf
   108                                  
   109                                  
   110                                  	; start time
   111                                  	
   112                                  
   113 000000AD E893020000                  call timeToAX
   114 000000B2 4989C5                      mov r13, rax
   115                                  
   116 000000B5 B800000000              	mov rax,0
   117 000000BA 48BF-                   	mov rdi, fstart
   117 000000BC [3907000000000000] 
   118 000000C4 4C89EE                  	mov rsi,r13
   119 000000C7 E8(00000000)            	call printf
   120                                  
   121                                  
   122 000000CC 4C89FB                  	mov rbx,r15
   123 000000CF 48FFC3                  	inc rbx
   124                                  	myLoop:
   125                                  
   126 000000D2 48FFCB                  	dec rbx
   127 000000D5 7407                    	jz myLoopEnd	
   128                                  	
   129 000000D7 E85E020000              		call CRC  
   130                                  	 
   131 000000DC EBF4                    	jmp myLoop
   132                                  	myLoopEnd:
   133                                  	
   134                                  
   135                                  	; end time
   136 000000DE E862020000              	call timeToAX
   137 000000E3 4989C6                      mov r14, rax
   138                                  
   139 000000E6 B800000000              	mov rax,0
   140 000000EB 48BF-                   	mov rdi, fstart
   140 000000ED [3907000000000000] 
   141 000000F5 4C89F6                  	mov rsi,r14
   142 000000F8 E8(00000000)            	call printf
   143                                  	
   144                                  	; delta
   145 000000FD 4D29EE                  	sub r14,r13
   146 00000100 B800000000              	mov rax,0
   147 00000105 48BF-                   	mov rdi, fdelta
   147 00000107 [5307000000000000] 
   148 0000010F 4C89F6                  	mov rsi,r14
   149 00000112 E8(00000000)            	call printf
   150                                  	
   151                                  	
   152 00000117 E833000000              	call exit
   153 0000011C C3                      ret
   154                                  
   155                                  
   156                                  
   157                                  
   158                                  
   159                                  
   160                                  
   161                                  
   162                                  
   163                                  
   164                                  ; close file
   165 0000011D 488B3C25[09020000]      mov rdi, qword[FD]
   166 00000125 E847000000              call closeFile
   167                                  
   168 0000012A C3                      ret
   169                                  
   170                                  ;
   171                                  
   172                                  
   173                                  
   174                                  
   175                                  
   176                                  
   177                                  
   178                                  
   179                                  
   180                                  
   181                                  
   182                                  
   183                                  
   184                                  
   185                                  
   186                                  
   187                                  
   188                                  global printString ; rsi <= stringAddress
   189                                  printString:
   190                                      ; rsi msg addres
   191 0000012B 4989F4                  	mov r12,rsi
   192 0000012E BA00000000              	mov rdx,0
   193                                  
   194                                  	strLoop:
   195 00000133 41803C2400              	   cmp byte[r12],0
   196 00000138 7408                    	   je loopEnd;
   197 0000013A 48FFC2                  	   inc rdx
   198 0000013D 49FFC4                  	   inc r12
   199 00000140 EBF1                    	   jmp strLoop	
   200                                  	   
   201                                  	loopEnd:
   202 00000142 B801000000              	mov rax,1 ; print
   203 00000147 BF01000000              	mov rdi,1 ; to std_out
   204 0000014C 0F05                    	syscall
   205                                  
   206 0000014E C3                      ret
   207                                  
   208                                  
   209                                  
   210                                  
   211                                  
   212                                  global exit
   213                                  exit:
   214 0000014F B83C000000              	mov rax,60
   215 00000154 BF00000000              	mov rdi,0
   216 00000159 0F05                    	syscall
   217                                  
   218 0000015B C3                      ret
   219                                  	
   220                                  	
   221                                  ; ---- funkcje manipulujace plikiem
   222                                  ; ---------------------------------
   223                                  
   224                                  
   225                                  global readFile
   226                                  readFile:
   227                                      
   228 0000015C B800000000              	mov rax, NR_read
   229 00000161 0F05                    	syscall
   230                                  	
   231                                  	;mov byte[rsi+rax],0 ; dodajemy 0 na koncu lancucha
   232                                  	;mov rax,rsi
   233                                  	;push rsi
   234                                  	;push rax
   235                                  	;	mov  rsi,success_Read
   236                                  	;	call printString
   237                                  	;pop rax
   238                                  	;pop rsi
   239 00000163 C3                      ret
   240                                  
   241                                  ; ---
   242                                  
   243                                  
   244                                  global openFile
   245                                  openFile:
   246                                  
   247 00000164 B802000000              	mov rax, NR_open
   248 00000169 BE00000000              	mov rsi, O_RDONLY
   249 0000016E 0F05                    	syscall
   250 00000170 C3                      ret
   251                                  
   252                                  
   253                                  global closeFile
   254                                  closeFile:
   255 00000171 B803000000              mov rax,NR_close
   256 00000176 0F05                    syscall
   257 00000178 C3                      ret
   258                                  
   259                                  
   260                                  global parseFile ; 	mov rsi, bufIn
   261                                  parseFile:
   262                                  	
   263 00000179 48BE-                   	mov rsi, bufIn 
   263 0000017B [1102000000000000] 
   264 00000183 48BF-                   	mov rdi, dataBin
   264 00000185 [1406000000000000] 
   265                                  	
   266                                  	parseChar:
   267 0000018D 66B80000                		mov ax,0
   268 00000191 803E00                  		cmp byte [rsi],0
   269 00000194 741A                    		je parseEnd
   270                                  		
   271 00000196 E816000000              		call charToInt
   272 0000019B 48FFC6                  		inc rsi
   273                                  		
   274 0000019E E80E000000              		call charToInt
   275 000001A3 48FFC6                  		inc rsi
   276 000001A6 8807                    		mov byte[rdi],al
   277 000001A8 48FFC7                  		inc rdi
   278 000001AB 48FFC6                  		inc rsi
   279 000001AE EBDD                    		jmp parseChar
   280                                  	
   281                                  	parseEnd:
   282                                  	
   283                                  	
   284                                  
   285                                  
   286                                  parseFileLoop:
   287                                  
   288                                  
   289 000001B0 C3                      ret 
   290                                  
   291                                  
   292                                  
   293                                  global charToInt ; char [rsi]
   294                                  charToInt:
   295 000001B1 803E30                  	cmp byte[rsi],0x30
   296 000001B4 0F84BE000000            	je loop0
   297                                  	
   298 000001BA 803E31                  	cmp byte[rsi],0x31
   299 000001BD 0F84BE000000            	je loop1
   300                                  
   301 000001C3 803E32                  	cmp byte[rsi],0x32
   302 000001C6 0F84BE000000            	je loop2
   303                                  
   304 000001CC 803E33                  	cmp byte[rsi],0x33
   305 000001CF 0F84BE000000            	je loop3
   306                                  
   307 000001D5 803E34                  	cmp byte[rsi],0x34
   308 000001D8 0F84BE000000            	je loop4
   309                                  	
   310 000001DE 803E35                  	cmp byte[rsi],0x35
   311 000001E1 0F84BE000000            	je loop5
   312                                  
   313 000001E7 803E36                  	cmp byte[rsi],0x36
   314 000001EA 0F84BE000000            	je loop6
   315                                  
   316 000001F0 803E37                  	cmp byte[rsi],0x37
   317 000001F3 0F84BE000000            	je loop7
   318                                  	
   319 000001F9 803E38                  	cmp byte[rsi],0x38
   320 000001FC 0F84BE000000            	je loop8
   321                                  	
   322 00000202 803E39                  	cmp byte[rsi],0x39
   323 00000205 0F84BE000000            	je loop9
   324                                  
   325 0000020B 803E41                  	cmp byte[rsi],0x41
   326 0000020E 0F84BE000000            	je loopa
   327                                  
   328 00000214 803E61                  	cmp byte[rsi],0x61
   329 00000217 0F84B5000000            	je loopa
   330                                  	
   331 0000021D 803E42                  	cmp byte[rsi],0x42
   332 00000220 0F84B5000000            	je loopb
   333                                  	
   334 00000226 803E62                  	cmp byte[rsi],0x62
   335 00000229 0F84AC000000            	je loopb
   336                                  
   337 0000022F 803E43                  	cmp byte[rsi],0x43
   338 00000232 0F84AC000000            	je loopc
   339                                  
   340 00000238 803E63                  	cmp byte[rsi],0x63
   341 0000023B 0F84A3000000            	je loopc
   342                                  	
   343 00000241 803E44                  	cmp byte[rsi],0x44
   344 00000244 0F84A3000000            	je loop_d
   345                                  	
   346 0000024A 803E64                  	cmp byte[rsi],0x64
   347 0000024D 0F849A000000            	je loop_d
   348                                  
   349 00000253 803E45                  	cmp byte[rsi],0x45
   350 00000256 0F849A000000            	je loop_e
   351                                  
   352 0000025C 803E65                  	cmp byte[rsi],0x65
   353 0000025F 0F8491000000            	je loop_e
   354                                  	
   355 00000265 803E46                  	cmp byte[rsi],0x46
   356 00000268 0F8491000000            	je loopf
   357                                  	
   358 0000026E 803E66                  	cmp byte[rsi],0x66
   359 00000271 0F8488000000            	je loopf
   360                                  
   361 00000277 C3                      	ret
   362                                  	
   363                                  	loop0:
   364 00000278 66C1E004                	shl ax,4
   365 0000027C 6683C000                	add ax,0
   366 00000280 C3                      	ret
   367                                  
   368                                  	loop1:
   369 00000281 66C1E004                	shl ax,4	
   370 00000285 6683C001                	add ax,1
   371 00000289 C3                      	ret
   372                                  	
   373                                  	loop2:
   374 0000028A 66C1E004                	shl ax,4	
   375 0000028E 6683C002                	add ax,2
   376 00000292 C3                      	ret
   377                                  	
   378                                  	loop3:
   379 00000293 66C1E004                	shl ax,4	
   380 00000297 6683C003                	add ax,3
   381 0000029B C3                      	ret
   382                                  
   383                                  	loop4:
   384 0000029C 66C1E004                	shl ax,4	
   385 000002A0 6683C004                	add ax,4
   386 000002A4 C3                      	ret
   387                                  	
   388                                  	loop5:
   389 000002A5 66C1E004                	shl ax,4	
   390 000002A9 6683C005                	add ax,5
   391 000002AD C3                      	ret
   392                                  	
   393                                  	loop6:
   394 000002AE 66C1E004                	shl ax,4	
   395 000002B2 6683C006                	add ax,6
   396 000002B6 C3                      	ret
   397                                  	
   398                                  	loop7:
   399 000002B7 66C1E004                	shl ax,4	
   400 000002BB 6683C007                	add ax,7
   401 000002BF C3                      	ret
   402                                  	
   403                                  	loop8:
   404 000002C0 66C1E004                	shl ax,4	
   405 000002C4 6683C008                	add ax,8
   406 000002C8 C3                      	ret
   407                                  	
   408                                  	loop9:
   409 000002C9 66C1E004                	shl ax,4	
   410 000002CD 6683C009                	add ax,9
   411 000002D1 C3                      	ret
   412                                  	
   413                                  	loopa:
   414 000002D2 66C1E004                	shl ax,4	
   415 000002D6 6683C00A                	add ax,0x0a
   416 000002DA C3                      	ret
   417                                  	
   418                                  	loopb:
   419 000002DB 66C1E004                	shl ax,4	
   420 000002DF 6683C00B                	add ax,0x0b
   421 000002E3 C3                      	ret
   422                                  	
   423                                  	loopc:
   424 000002E4 66C1E004                	shl ax,4	
   425 000002E8 6683C00C                	add ax,0x0c
   426 000002EC C3                      	ret
   427                                  	
   428                                  	loop_d:
   429 000002ED 66C1E004                	shl ax,4	
   430 000002F1 6683C00D                	add ax,0x0d
   431 000002F5 C3                      	ret
   432                                  	
   433                                  	loop_e:
   434 000002F6 66C1E004                	shl ax,4	
   435 000002FA 6683C00E                	add ax,0x0e
   436 000002FE C3                      	ret
   437                                  	
   438                                  	loopf:
   439 000002FF 66C1E004                	shl ax,4	
   440 00000303 6683C00F                	add ax,0x0f
   441 00000307 C3                      	ret
   442                                  
   443 00000308 C3                      ret
   444                                  
   445                                  
   446                                  global parseParam ; rsi
   447                                  parseParam:
   448                                  
   449 00000309 B800000000              	mov rax, 0
   450 0000030E 66B90A00                	mov cx,0x0a
   451                                  	
   452                                  	parseParamLoop:
   453 00000312 803E00                  		cmp byte[rsi],0
   454 00000315 741A                    		je 	parseParamEnd
   455 00000317 803E14                  		cmp byte[rsi],20
   456 0000031A 7415                    		je 	parseParamEnd
   457                                  	
   458 0000031C BB00000000              	mov rbx,0
   459 00000321 8A1E                    	mov bl, byte[rsi]
   460 00000323 80EB30                  	sub bl, 0x030
   461 00000326 66F7E1                  	mul cx
   462 00000329 4801D8                  	add rax,rbx
   463 0000032C 48FFC6                  	inc rsi
   464 0000032F EBE1                    	jmp parseParamLoop
   465                                  	
   466                                  	parseParamEnd:
   467                                  
   468 00000331 48890425[6B070000]      	mov [counter],rax
   469                                  
   470 00000339 C3                      ret
   471                                  
   472                                  
   473                                  global CRC
   474                                  CRC:
   475 0000033A B8FFFFFFFF              		mov rax , 0xffffffff
   476                                  		CRCLoop:
   477 0000033F 48FFC8                  		dec rax
   478 00000342 75FB                    		jnz CRCLoop
   479 00000344 C3                      ret
   480                                  
   481                                   
   482                                   
   483                                  global timeToAX
   484                                  timeToAX:
   485                                  
   486 00000345 E8(00000000)            	call clock_gettime
   487 0000034A 4889F8                  mov rax,rdi
   488                                  ;	push rdi
   489                                  ;	mov rax, 201
   490                                  ;	xor rdi, rdi        
   491                                  ;	syscall
   492                                  ;	pop rdi
   493 0000034D C3                      ret 
