     1                                  extern rdtsc
     2                                  extern gettimeofday
     3                                  extern clock_gettime	
     4                                  extern gettimeofday
     5                                  extern _localtime
     6                                  extern printf
     7                                  section .data
     8                                  
     9                                  NR_read  equ 0
    10                                  NR_write equ 1
    11                                  NR_open  equ 2
    12                                  NR_close equ 3
    13                                  
    14                                  O_RDONLY equ 000000q
    15                                  
    16                                  
    17                                  
    18 00000000 00C1814001C0804101-     myHigh db 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x...
    18 00000009 C0804100C1814001C0-
    18 00000012 804100C1814000C181-
    18 0000001B 4001C0804101C08041-
    18 00000024 00C1814000C1814001-
    18 0000002D C0804100C1814001C0-
    18 00000036 804101C0804100C181-
    18 0000003F 4001C0804100C18140-
    18 00000048 00C1814001C0804100-
    18 00000051 C1814001C0804101C0-
    18 0000005A 804100C1814000C181-
    18 00000063 4001C0804101C08041-
    18 0000006C 00C1814001C0804100-
    18 00000075 C1814000C1814001C0-
    18 0000007E 804101C0804100C181-
    18 00000087 4000C1814001C08041-
    18 00000090 00C1814001C0804101-
    18 00000099 C0804100C1814000C1-
    18 000000A2 814001C0804101C080-
    18 000000AB 4100C1814001C08041-
    18 000000B4 00C1814000C1814001-
    18 000000BD C0804100C1814001C0-
    18 000000C6 804101C0804100C181-
    18 000000CF 4001C0804100C18140-
    18 000000D8 00C1814001C0804101-
    18 000000E1 C0804100C1814000C1-
    18 000000EA 814001C0804100C181-
    18 000000F3 4001C0804101C08041-
    18 000000FC 00C18140           
    19 00000100 00C0C101C30302C2C6-     myLow  db 0x00, 0xc0, 0xc1, 0x01, 0xc3, 0x03, 0x02, 0xc2, 0xc6, 0x06, 0x07, 0xc7, 0x05, 0xc5, 0xc4, 0x04, 0xcc, 0x0c, 0x0d, 0xcd, 0x0f, 0xcf, 0xce, 0x0e, 0x0a, 0xca, 0xcb, 0x0b, 0xc9, 0x09, 0x08, 0xc8, 0xd8, 0x18, 0x19, 0xd9, 0x1b, 0xdb, 0xda, 0x1a, 0x1e, 0xde, 0xdf, 0x1f, 0xdd, 0x1d, 0x1c, 0xdc, 0x14, 0xd4, 0xd5, 0x15, 0xd7, 0x17, 0x16, 0xd6, 0xd2, 0x12, 0x13, 0xd3, 0x11, 0xd1, 0xd0, 0x10, 0xf0, 0x30, 0x31, 0xf1, 0x33, 0xf3, 0xf2, 0x32, 0x36, 0xf6, 0xf7, 0x37, 0xf5, 0x35, 0x34, 0xf4, 0x3c, 0xfc, 0xfd, 0x3d, 0xff, 0x3f, 0x3e, 0xfe, 0xfa, 0x3a, 0x3b, 0xfb, 0x39, 0xf9, 0xf8, 0x38, 0x28, 0xe8, 0xe9, 0x29, 0xeb, 0x2b, 0x2a, 0xea, 0xee, 0x2e, 0x2f, 0xef, 0x2d, 0xed, 0xec, 0x2c, 0xe4, 0x24, 0x25, 0xe5, 0x27, 0xe7, 0xe6, 0x26, 0x22, 0xe2, 0xe3, 0x23, 0xe1, 0x21, 0x20, 0xe0, 0xa0, 0x60, 0x61, 0xa1, 0x63, 0xa3, 0xa2, 0x62, 0x66, 0xa6, 0xa7, 0x67, 0xa5, 0x65, 0x64, 0xa4, 0x6c, 0xac, 0xad, 0x6d, 0xaf, 0x6f, 0x6e, 0xae, 0xaa, 0x6a, 0x6b, 0xab, 0x69, 0xa9, 0xa8, 0x68, 0x78, 0xb8, 0xb9, 0x79, 0xbb, 0x7b, 0x7a, 0xba, 0x...
    19 00000109 0607C705C5C404CC0C-
    19 00000112 0DCD0FCFCE0E0ACACB-
    19 0000011B 0BC90908C8D81819D9-
    19 00000124 1BDBDA1A1EDEDF1FDD-
    19 0000012D 1D1CDC14D4D515D717-
    19 00000136 16D6D21213D311D1D0-
    19 0000013F 10F03031F133F3F232-
    19 00000148 36F6F737F53534F43C-
    19 00000151 FCFD3DFF3F3EFEFA3A-
    19 0000015A 3BFB39F9F83828E8E9-
    19 00000163 29EB2B2AEAEE2E2FEF-
    19 0000016C 2DEDEC2CE42425E527-
    19 00000175 E7E62622E2E323E121-
    19 0000017E 20E0A06061A163A3A2-
    19 00000187 6266A6A767A56564A4-
    19 00000190 6CACAD6DAF6F6EAEAA-
    19 00000199 6A6BAB69A9A86878B8-
    19 000001A2 B979BB7B7ABABE7E7F-
    19 000001AB BF7DBDBC7CB47475B5-
    19 000001B4 77B7B67672B2B373B1-
    19 000001BD 7170B0509091519353-
    19 000001C6 529296565797559594-
    19 000001CF 549C5C5D9D5F9F9E5E-
    19 000001D8 5A9A9B5B9959589888-
    19 000001E1 4849894B8B8A4A4E8E-
    19 000001EA 8F4F8D4D4C8C448485-
    19 000001F3 458747468682424383-
    19 000001FC 41818040           
    20                                  
    21                                  
    22                                  
    23 00000200 646174612E74787400      fileName db "data.txt",0 ;
    24 00000209 0000000000000000        FD       dq 0 ; descriptor
    25                                  
    26 00000211 000000000000000000-     bufIn    db 0x401 dup 0
    26 0000021A 000000000000000000-
    26 00000223 000000000000000000-
    26 0000022C 000000000000000000-
    26 00000235 000000000000000000-
    26 0000023E 000000000000000000-
    26 00000247 000000000000000000-
    26 00000250 000000000000000000-
    26 00000259 000000000000000000-
    26 00000262 000000000000000000-
    26 0000026B 000000000000000000-
    26 00000274 000000000000000000-
    26 0000027D 000000000000000000-
    26 00000286 000000000000000000-
    26 0000028F 000000000000000000-
    26 00000298 000000000000000000-
    26 000002A1 000000000000000000-
    26 000002AA 000000000000000000-
    26 000002B3 000000000000000000-
    26 000002BC 000000000000000000-
    26 000002C5 000000000000000000-
    26 000002CE 000000000000000000-
    26 000002D7 000000000000000000-
    26 000002E0 000000000000000000-
    26 000002E9 000000000000000000-
    26 000002F2 000000000000000000-
    26 000002FB 000000000000000000-
    26 00000304 000000000000000000-
    26 0000030D 000000000000000000-
    26 00000316 000000000000000000-
    26 0000031F 000000000000000000-
    26 00000328 000000000000000000-
    26 00000331 000000000000000000-
    26 0000033A 000000000000000000-
    26 00000343 000000000000000000-
    26 0000034C 000000000000000000-
    26 00000355 000000000000000000-
    26 0000035E 000000000000000000-
    26 00000367 000000000000000000-
    26 00000370 000000000000000000-
    26 00000379 000000000000000000-
    26 00000382 000000000000000000-
    26 0000038B 000000000000000000-
    26 00000394 000000000000000000-
    26 0000039D 000000000000000000-
    26 000003A6 000000000000000000-
    26 000003AF 000000000000000000-
    26 000003B8 000000000000000000-
    26 000003C1 000000000000000000-
    26 000003CA 000000000000000000-
    26 000003D3 000000000000000000-
    26 000003DC 000000000000000000-
    26 000003E5 000000000000000000-
    26 000003EE 000000000000000000-
    26 000003F7 000000000000000000-
    26 00000400 000000000000000000-
    26 00000409 000000000000000000-
    26 00000412 000000000000000000-
    26 0000041B 000000000000000000-
    26 00000424 000000000000000000-
    26 0000042D 000000000000000000-
    26 00000436 000000000000000000-
    26 0000043F 000000000000000000-
    26 00000448 000000000000000000-
    26 00000451 000000000000000000-
    26 0000045A 000000000000000000-
    26 00000463 000000000000000000-
    26 0000046C 000000000000000000-
    26 00000475 000000000000000000-
    26 0000047E 000000000000000000-
    26 00000487 000000000000000000-
    26 00000490 000000000000000000-
    26 00000499 000000000000000000-
    26 000004A2 000000000000000000-
    26 000004AB 000000000000000000-
    26 000004B4 000000000000000000-
    26 000004BD 000000000000000000-
    26 000004C6 000000000000000000-
    26 000004CF 000000000000000000-
    26 000004D8 000000000000000000-
    26 000004E1 000000000000000000-
    26 000004EA 000000000000000000-
    26 000004F3 000000000000000000-
    26 000004FC 000000000000000000-
    26 00000505 000000000000000000-
    26 0000050E 000000000000000000-
    26 00000517 000000000000000000-
    26 00000520 000000000000000000-
    26 00000529 000000000000000000-
    26 00000532 000000000000000000-
    26 0000053B 000000000000000000-
    26 00000544 000000000000000000-
    26 0000054D 000000000000000000-
    26 00000556 000000000000000000-
    26 0000055F 000000000000000000-
    26 00000568 000000000000000000-
    26 00000571 000000000000000000-
    26 0000057A 000000000000000000-
    26 00000583 000000000000000000-
    26 0000058C 000000000000000000-
    26 00000595 000000000000000000-
    26 0000059E 000000000000000000-
    26 000005A7 000000000000000000-
    26 000005B0 000000000000000000-
    26 000005B9 000000000000000000-
    26 000005C2 000000000000000000-
    26 000005CB 000000000000000000-
    26 000005D4 000000000000000000-
    26 000005DD 000000000000000000-
    26 000005E6 000000000000000000-
    26 000005EF 000000000000000000-
    26 000005F8 000000000000000000-
    26 00000601 000000000000000000-
    26 0000060A 0000000000000000   
    27 00000612 0A0D                    space	 db 10,13
    28 00000614 000000000000000000-     dataBin  db 0x111 dup 0
    28 0000061D 000000000000000000-
    28 00000626 000000000000000000-
    28 0000062F 000000000000000000-
    28 00000638 000000000000000000-
    28 00000641 000000000000000000-
    28 0000064A 000000000000000000-
    28 00000653 000000000000000000-
    28 0000065C 000000000000000000-
    28 00000665 000000000000000000-
    28 0000066E 000000000000000000-
    28 00000677 000000000000000000-
    28 00000680 000000000000000000-
    28 00000689 000000000000000000-
    28 00000692 000000000000000000-
    28 0000069B 000000000000000000-
    28 000006A4 000000000000000000-
    28 000006AD 000000000000000000-
    28 000006B6 000000000000000000-
    28 000006BF 000000000000000000-
    28 000006C8 000000000000000000-
    28 000006D1 000000000000000000-
    28 000006DA 000000000000000000-
    28 000006E3 000000000000000000-
    28 000006EC 000000000000000000-
    28 000006F5 000000000000000000-
    28 000006FE 000000000000000000-
    28 00000707 000000000000000000-
    28 00000710 000000000000000000-
    28 00000719 000000000000000000-
    28 00000722 000000             
    29 00000725 00                      dataLen	 db 0
    30                                  
    31                                  bufferlen equ 0x400
    32 00000726 000000000000000000-     buf2     db 20 dup 0
    32 0000072F 000000000000000000-
    32 00000738 0000               
    33 0000073A 0A0D73746172743A20-     fstart     db   10,13,"start: %d",10,13,0
    33 00000743 25640A0D00         
    34 00000748 73746F70203A202564-     fend       db   "stop : %d",10,13,0
    34 00000751 0A0D00             
    35 00000754 637A6173205B736563-     fdelta     db   "czas [sec]: %d",10,13,0
    35 0000075D 5D3A2025640A0D00   
    36 00000765 63796B6C3A2025640A-     fdelta_sr  db   "cykl: %d",10,13,0
    36 0000076E 0D00               
    37 00000770 63796B6C693A202564-     fcycles    db   "cykli: %d",10,13,0
    37 00000779 0A0D00             
    38 0000077C 726573756C743A2030-     fresult    db   "result: 0x%X",10,13,0
    38 00000785 7825580A0D00       
    39                                  
    40 0000078B FF                      crcHigh	   db   0xff;
    41 0000078C FF                      crcLow	   db   0xff;
    42                                  
    43                                  
    44 0000078D 0000000000000000        counter	   dq 0
    45 00000795 2020202000              now		   db "    ",0
    46                                  
    47 0000079A 0000000000000000        time_sec   dq 0;     /* seconds */
    48 000007A2 0000000000000000        time_msec  dq 0;     /* microseconds */
    49                                  
    50                                  
    51 000007AA 0A0D4F4B210A0D00        success_Read db 10,13,"OK!",10,13,0
    52                                  
    53 000007B2 0A0D77637A7974756A-     msg db 10,13 , "wczytuje plik: data.txt", 10,13,0
    53 000007BB 6520706C696B3A2064-
    53 000007C4 6174612E7478740A0D-
    53 000007CD 00                 
    54                                  
    55                                  
    56                                  
    57                                  section .text
    58                                  global main
    59                                  main:
    60                                  
    61                                  	; args
    62                                  	;mov ecx, [esp+4] ; argc
    63                                  	;mov edx, [esp+8] ; argv
    64                                  
    65 00000000 4A8B740608              	mov rsi, qword [rsi+r8+8] ; argv
    66                                  	
    67 00000005 B800000000              	mov rax, 0
    68 0000000A E82E030000              	call parseParam ; rsi to rax
    69 0000000F 4989C7                  	mov r15,rax
    70                                  	
    71 00000012 48BE-                   	mov rsi, buf2
    71 00000014 [2607000000000000] 
    72 0000001C 488906                  	mov [rsi], rax
    73                                  	
    74 0000001F E83B010000              	call printString
    75                                  
    76                                  
    77                                  
    78                                  
    79                                  
    80                                  
    81                                  
    82                                  
    83 00000024 48BE-                   	mov rsi, msg
    83 00000026 [B207000000000000] 
    84 0000002E E82C010000              	call printString
    85                                  	
    86                                  	; open file
    87 00000033 48BF-                   	mov rdi,fileName
    87 00000035 [0002000000000000] 
    88 0000003D E856010000              	call openFile
    89                                  	
    90                                  	; save descriptor
    91 00000042 48890425[09020000]      	mov qword [FD], rax
    92                                  	
    93                                  	; read file
    94 0000004A 488B3C25[09020000]      	mov rdi, qword [FD]
    95 00000052 48BE-                   	mov rsi, bufIn
    95 00000054 [1102000000000000] 
    96 0000005C BA00040000              	mov rdx, bufferlen
    97 00000061 E82A010000              	call readFile
    98                                  
    99                                  	; close fileHigh
   100 00000066 488B3C25[09020000]      	mov rdi, qword [FD]	
   101 0000006E E832010000              	call closeFile
   102                                  	
   103                                  	; parse to binary
   104 00000073 E835010000              	call parseFile
   105                                  
   106                                  	; print dataIn
   107 00000078 48BE-                   	mov rsi, bufIn
   107 0000007A [1102000000000000] 
   108 00000082 E8D8000000              	call printString
   109                                  
   110                                  	; print
   111 00000087 48BE-                   	mov rsi, space
   111 00000089 [1206000000000000] 
   112 00000091 E8C9000000              	call printString
   113                                  
   114                                  
   115 00000096 B800000000              	mov rax,0
   116 0000009B 48BF-                   	mov rdi, fcycles
   116 0000009D [7007000000000000] 
   117 000000A5 4C89FE                  	mov rsi,r15
   118 000000A8 E8(00000000)            	call printf
   119                                  
   120                                  
   121                                  	; start time
   122 000000AD E83C030000                  call timeToAX
   123 000000B2 4989C5                      mov r13, rax
   124                                  
   125                                  
   126 000000B5 B800000000              	mov rax,0
   127 000000BA 48BF-                   	mov rdi, fstart
   127 000000BC [3A07000000000000] 
   128 000000C4 4C89EE                  	mov rsi,r13
   129 000000C7 E8(00000000)            	call printf
   130                                  
   131                                  
   132                                  
   133 000000CC E89E020000              		call CRC  
   134                                  
   135                                  	; end time
   136 000000D1 E818030000              	call timeToAX
   137 000000D6 4989C6                      mov r14, rax
   138                                  
   139 000000D9 B800000000              	mov rax,0
   140 000000DE 48BF-                   	mov rdi, fend
   140 000000E0 [4807000000000000] 
   141 000000E8 4C89F6                  	mov rsi,r14
   142 000000EB E8(00000000)            	call printf
   143                                  	
   144                                  	; delta
   145 000000F0 4D29EE                  	sub r14,r13
   146 000000F3 B800000000              	mov rax,0
   147 000000F8 48BF-                   	mov rdi, fdelta
   147 000000FA [5407000000000000] 
   148 00000102 4C89F6                  	mov rsi,r14
   149 00000105 E8(00000000)            	call printf
   150                                  	
   151 0000010A 4C89F8                  	mov rax,r15 ; liczba cykli w RAX
   152 0000010D BA00000000              	mov rdx,0
   153 00000112 BBE8030000              	mov rbx,1000
   154 00000117 48F7FB                  	idiv rbx	; sek -> msek
   155                                  	
   156 0000011A BA00000000              	mov rdx,0
   157 0000011F 4889C3                  	mov rbx,rax ; liczba cykli /1000 w rbx
   158 00000122 4C89F0                  	mov rax,r14 ; czas w rax
   159                                  	
   160 00000125 4869C0E8030000          	imul rax,1000 ; msek - usek
   161                                  	
   162 0000012C BA00000000              	mov rdx,0
   163 00000131 48F7FB                  	idiv rbx ; w rax (czas*1000)/(liczba cykli/1000)
   164                                  	
   165 00000134 48BF-                   	mov rdi, fdelta_sr
   165 00000136 [6507000000000000] 
   166 0000013E 4889DE                  	mov rsi,rbx
   167 00000141 B800000000              	mov rax,0
   168 00000146 E8(00000000)            	call printf
   169                                  	
   170                                  	
   171                                  	 
   172                                  	
   173                                  	
   174                                  
   175                                  	
   176                                  	
   177 0000014B E833000000              	call exit
   178 00000150 C3                      ret
   179                                  
   180                                  
   181                                  
   182                                  
   183                                  
   184                                  
   185                                  
   186                                  
   187                                  
   188                                  
   189                                  ; close file
   190 00000151 488B3C25[09020000]      mov rdi, qword[FD]
   191 00000159 E847000000              call closeFile
   192                                  
   193 0000015E C3                      ret
   194                                  
   195                                  ;
   196                                  
   197                                  
   198                                  
   199                                  
   200                                  
   201                                  
   202                                  
   203                                  
   204                                  
   205                                  
   206                                  
   207                                  
   208                                  
   209                                  
   210                                  
   211                                  
   212                                  
   213                                  global printString ; rsi <= stringAddress
   214                                  printString:
   215                                      ; rsi msg addres
   216 0000015F 4989F4                  	mov r12,rsi
   217 00000162 BA00000000              	mov rdx,0
   218                                  
   219                                  	strLoop:
   220 00000167 41803C2400              	   cmp byte[r12],0
   221 0000016C 7408                    	   je loopEnd;
   222 0000016E 48FFC2                  	   inc rdx
   223 00000171 49FFC4                  	   inc r12
   224 00000174 EBF1                    	   jmp strLoop	
   225                                  	   
   226                                  	loopEnd:
   227 00000176 B801000000              	mov rax,1 ; print
   228 0000017B BF01000000              	mov rdi,1 ; to std_out
   229 00000180 0F05                    	syscall
   230                                  
   231 00000182 C3                      ret
   232                                  
   233                                  
   234                                  
   235                                  
   236                                  
   237                                  global exit
   238                                  exit:
   239 00000183 B83C000000              	mov rax,60
   240 00000188 BF00000000              	mov rdi,0
   241 0000018D 0F05                    	syscall
   242                                  
   243 0000018F C3                      ret
   244                                  	
   245                                  	
   246                                  ; ---- funkcje manipulujace plikiem
   247                                  ; ---------------------------------
   248                                  
   249                                  
   250                                  global readFile
   251                                  readFile:
   252 00000190 B800000000              	mov rax, NR_read
   253 00000195 0F05                    	syscall
   254 00000197 C3                      ret
   255                                  
   256                                  ; ---
   257                                  
   258                                  
   259                                  global openFile
   260                                  openFile:
   261 00000198 B802000000              	mov rax, NR_open
   262 0000019D BE00000000              	mov rsi, O_RDONLY
   263 000001A2 0F05                    	syscall
   264 000001A4 C3                      ret
   265                                  
   266                                  
   267                                  global closeFile
   268                                  closeFile:
   269 000001A5 B803000000              	mov rax,NR_close
   270 000001AA 0F05                    	syscall
   271 000001AC C3                      ret
   272                                  
   273                                  
   274                                  global parseFile ; 	mov rsi, bufIn
   275                                  parseFile:
   276                                  	
   277 000001AD 48BE-                   	mov rsi, bufIn 
   277 000001AF [1102000000000000] 
   278 000001B7 48BF-                   	mov rdi, dataBin
   278 000001B9 [1406000000000000] 
   279                                  	
   280                                  	parseChar:
   281 000001C1 66B80000                		mov ax,0
   282 000001C5 803E00                  		cmp byte [rsi],0
   283 000001C8 741A                    		je parseEnd
   284                                  		
   285 000001CA E816000000              		call charToInt
   286 000001CF 48FFC6                  		inc rsi
   287                                  		
   288 000001D2 E80E000000              		call charToInt
   289 000001D7 48FFC6                  		inc rsi
   290 000001DA 8807                    		mov byte[rdi],al
   291 000001DC 48FFC7                  		inc rdi
   292 000001DF 48FFC6                  		inc rsi
   293 000001E2 EBDD                    		jmp parseChar
   294                                  	
   295                                  	parseEnd:
   296                                  	
   297                                  	
   298                                  
   299                                  
   300                                  parseFileLoop:
   301                                  
   302                                  
   303 000001E4 C3                      ret 
   304                                  
   305                                  
   306                                  
   307                                  global charToInt ; char [rsi]
   308                                  charToInt:
   309 000001E5 803E30                  	cmp byte[rsi],0x30
   310 000001E8 0F84BE000000            	je loop0
   311                                  	
   312 000001EE 803E31                  	cmp byte[rsi],0x31
   313 000001F1 0F84BE000000            	je loop1
   314                                  
   315 000001F7 803E32                  	cmp byte[rsi],0x32
   316 000001FA 0F84BE000000            	je loop2
   317                                  
   318 00000200 803E33                  	cmp byte[rsi],0x33
   319 00000203 0F84BE000000            	je loop3
   320                                  
   321 00000209 803E34                  	cmp byte[rsi],0x34
   322 0000020C 0F84BE000000            	je loop4
   323                                  	
   324 00000212 803E35                  	cmp byte[rsi],0x35
   325 00000215 0F84BE000000            	je loop5
   326                                  
   327 0000021B 803E36                  	cmp byte[rsi],0x36
   328 0000021E 0F84BE000000            	je loop6
   329                                  
   330 00000224 803E37                  	cmp byte[rsi],0x37
   331 00000227 0F84BE000000            	je loop7
   332                                  	
   333 0000022D 803E38                  	cmp byte[rsi],0x38
   334 00000230 0F84BE000000            	je loop8
   335                                  	
   336 00000236 803E39                  	cmp byte[rsi],0x39
   337 00000239 0F84BE000000            	je loop9
   338                                  
   339 0000023F 803E41                  	cmp byte[rsi],0x41
   340 00000242 0F84BE000000            	je loopa
   341                                  
   342 00000248 803E61                  	cmp byte[rsi],0x61
   343 0000024B 0F84B5000000            	je loopa
   344                                  	
   345 00000251 803E42                  	cmp byte[rsi],0x42
   346 00000254 0F84B5000000            	je loopb
   347                                  	
   348 0000025A 803E62                  	cmp byte[rsi],0x62
   349 0000025D 0F84AC000000            	je loopb
   350                                  
   351 00000263 803E43                  	cmp byte[rsi],0x43
   352 00000266 0F84AC000000            	je loopc
   353                                  
   354 0000026C 803E63                  	cmp byte[rsi],0x63
   355 0000026F 0F84A3000000            	je loopc
   356                                  	
   357 00000275 803E44                  	cmp byte[rsi],0x44
   358 00000278 0F84A3000000            	je loop_d
   359                                  	
   360 0000027E 803E64                  	cmp byte[rsi],0x64
   361 00000281 0F849A000000            	je loop_d
   362                                  
   363 00000287 803E45                  	cmp byte[rsi],0x45
   364 0000028A 0F849A000000            	je loop_e
   365                                  
   366 00000290 803E65                  	cmp byte[rsi],0x65
   367 00000293 0F8491000000            	je loop_e
   368                                  	
   369 00000299 803E46                  	cmp byte[rsi],0x46
   370 0000029C 0F8491000000            	je loopf
   371                                  	
   372 000002A2 803E66                  	cmp byte[rsi],0x66
   373 000002A5 0F8488000000            	je loopf
   374                                  
   375 000002AB C3                      	ret
   376                                  	
   377                                  	loop0:
   378 000002AC 66C1E004                	shl ax,4
   379 000002B0 6683C000                	add ax,0
   380 000002B4 C3                      	ret
   381                                  
   382                                  	loop1:
   383 000002B5 66C1E004                	shl ax,4	
   384 000002B9 6683C001                	add ax,1
   385 000002BD C3                      	ret
   386                                  	
   387                                  	loop2:
   388 000002BE 66C1E004                	shl ax,4	
   389 000002C2 6683C002                	add ax,2
   390 000002C6 C3                      	ret
   391                                  	
   392                                  	loop3:
   393 000002C7 66C1E004                	shl ax,4	
   394 000002CB 6683C003                	add ax,3
   395 000002CF C3                      	ret
   396                                  
   397                                  	loop4:
   398 000002D0 66C1E004                	shl ax,4	
   399 000002D4 6683C004                	add ax,4
   400 000002D8 C3                      	ret
   401                                  	
   402                                  	loop5:
   403 000002D9 66C1E004                	shl ax,4	
   404 000002DD 6683C005                	add ax,5
   405 000002E1 C3                      	ret
   406                                  	
   407                                  	loop6:
   408 000002E2 66C1E004                	shl ax,4	
   409 000002E6 6683C006                	add ax,6
   410 000002EA C3                      	ret
   411                                  	
   412                                  	loop7:
   413 000002EB 66C1E004                	shl ax,4	
   414 000002EF 6683C007                	add ax,7
   415 000002F3 C3                      	ret
   416                                  	
   417                                  	loop8:
   418 000002F4 66C1E004                	shl ax,4	
   419 000002F8 6683C008                	add ax,8
   420 000002FC C3                      	ret
   421                                  	
   422                                  	loop9:
   423 000002FD 66C1E004                	shl ax,4	
   424 00000301 6683C009                	add ax,9
   425 00000305 C3                      	ret
   426                                  	
   427                                  	loopa:
   428 00000306 66C1E004                	shl ax,4	
   429 0000030A 6683C00A                	add ax,0x0a
   430 0000030E C3                      	ret
   431                                  	
   432                                  	loopb:
   433 0000030F 66C1E004                	shl ax,4	
   434 00000313 6683C00B                	add ax,0x0b
   435 00000317 C3                      	ret
   436                                  	
   437                                  	loopc:
   438 00000318 66C1E004                	shl ax,4	
   439 0000031C 6683C00C                	add ax,0x0c
   440 00000320 C3                      	ret
   441                                  	
   442                                  	loop_d:
   443 00000321 66C1E004                	shl ax,4	
   444 00000325 6683C00D                	add ax,0x0d	
   445 00000329 C3                      	ret
   446                                  	
   447                                  	loop_e:
   448 0000032A 66C1E004                	shl ax,4	
   449 0000032E 6683C00E                	add ax,0x0e
   450 00000332 C3                      	ret
   451                                  	
   452                                  	loopf:
   453 00000333 66C1E004                	shl ax,4	
   454 00000337 6683C00F                	add ax,0x0f
   455 0000033B C3                      	ret
   456                                  
   457 0000033C C3                      ret
   458                                  
   459                                  
   460                                  global parseParam ; rsi
   461                                  parseParam:
   462                                  
   463 0000033D B800000000              	mov rax, 0
   464 00000342 B90A000000              	mov rcx,0x0a
   465                                  	
   466                                  	parseParamLoop:
   467 00000347 803E00                  		cmp byte[rsi],0
   468 0000034A 741A                    		je 	parseParamEnd
   469 0000034C 803E14                  		cmp byte[rsi],20
   470 0000034F 7415                    		je 	parseParamEnd
   471                                  	
   472 00000351 BB00000000              	mov rbx,0
   473 00000356 8A1E                    	mov bl, byte[rsi]
   474 00000358 80EB30                  	sub bl, 0x030
   475 0000035B 48F7E1                  	mul rcx
   476 0000035E 4801D8                  	add rax,rbx
   477 00000361 48FFC6                  	inc rsi
   478 00000364 EBE1                    	jmp parseParamLoop
   479                                  	
   480                                  	parseParamEnd:
   481                                  
   482 00000366 48890425[8D070000]      	mov [counter],rax
   483                                  
   484 0000036E C3                      ret
   485                                  
   486                                  
   487                                  global CRC
   488                                  CRC:
   489 0000036F 4157                    	push R15
   490                                  
   491                                  	; check len of binaryData
   492 00000371 48B8-                   	mov rax, dataBin
   492 00000373 [1406000000000000] 
   493 0000037B B500                    	mov ch,0 
   494 0000037D 48FFC8                  	dec rax
   495 00000380 FECD                    	dec ch
   496                                  	 lenLoop:
   497 00000382 48FFC0                  	 inc rax
   498 00000385 FEC5                    	 inc ch
   499 00000387 803800                  	 cmp byte [rax],0
   500 0000038A 75F6                    	 jne lenLoop	
   501 0000038C 882C25[25070000]        	mov byte[ dataLen ], ch
   502 00000393 B800000000              	mov rax,0
   503                                  
   504                                   
   505                                      ; ch <- length	
   506                                  	; ax  <- HiByte = 0xff
   507                                  	; al  <- LoByte = 0xff
   508                                  	; message[i] <- [dataBin+rdx]
   509                                  	 
   510                                  	
   511                                  
   512                                  
   513                                  	; R15 - loop len
   514                                  	; 10^6 loop
   515                                  	
   516                                  	CRCLoops:
   517 00000398 B4FF                    	mov ah, 0xff
   518 0000039A B0FF                    	mov al, 0xff
   519 0000039C 48BB-                   	mov rbx , dataBin ; Message
   519 0000039E [1406000000000000] 
   520 000003A6 8A2C25[25070000]        	mov ch, byte[ dataLen ]
   521                                  	;inc ch
   522 000003AD BA00000000              	mov rdx,0
   523                                  
   524                                  		; CRC !!!
   525                                  		oneCRC:
   526                                  	
   527 000003B2 448A0B                  		mov R9B, byte [rbx]   ; dh = *pMessage
   528 000003B5 48FFC3                  			 inc rbx    ; Message++
   529 000003B8 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   530 000003BA 4430CA                  		xor dl, R9B		; index = dl			     	;		Index  = HiByte ^ *pMessage++; 
   531                                  		
   532                                  		
   533 000003BD 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   534 000003C3 30C4                    		xor ah,al		;		HiByte = LoByte ^ aCRCHi[Index];
   535                                  		
   536 000003C5 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   537                                  						;		LoByte = aCRCLo[Index]; 
   538                                  
   539 000003CB FECD                    		dec ch
   540 000003CD 75E3                    		jnz oneCRC
   541                                  		; CRC !!
   542                                  		; HiByte = AH
   543                                  		; LoByte = AL
   544                                  		; Result = AX
   545                                  		;		return (HiByte << 8 | LoByte); 
   546                                  		
   547                                  	; / 10^6 loop	
   548 000003CF 49FFCF                  	dec r15
   549 000003D2 75C4                    	jnz CRCLoops
   550                                  	
   551                                  	; print result
   552 000003D4 48BF-                   	mov rdi, fresult
   552 000003D6 [7C07000000000000] 
   553 000003DE 4889C6                  	mov rsi,rax
   554 000003E1 B800000000              	mov rax,0
   555 000003E6 E8(00000000)            	call printf
   556                                  	
   557 000003EB 415F                    	POP R15
   558 000003ED C3                      ret
   559                                  
   560                                   ; https://faculty.nps.edu/cseagle/assembly/sys_call.html
   561                                   
   562                                  global timeToAX
   563                                  timeToAX:
   564                                  
   565 000003EE B860000000              mov rax,96
   566 000003F3 48BF-                   mov rdi, time_sec
   566 000003F5 [9A07000000000000] 
   567 000003FD 0F05                    syscall
   568                                  
   569                                  
   570 000003FF 488B0425[9A070000]      mov rax,[time_sec]
   571                                  
   572                                  ; rdtsc
   573                                   
   574                                  ;mov rax,rdi
   575                                  ;	push rdi
   576                                  ;	mov rax, 201
   577                                  ;	xor rdi, rdi        
   578                                  ;	syscall
   579                                  ;	pop rdi
   580                                  
   581 00000407 C3                      ret 
   582                                  
   583                                  
   584                                  
   585                                  
   586                                  
   587                                   
