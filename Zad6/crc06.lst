     1                                  extern printf
     2                                  section .data
     3                                  
     4                                  
     5                                  
     6 00000000 00C1814001C0804101-     myHigh db 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x...
     6 00000009 C0804100C1814001C0-
     6 00000012 804100C1814000C181-
     6 0000001B 4001C0804101C08041-
     6 00000024 00C1814000C1814001-
     6 0000002D C0804100C1814001C0-
     6 00000036 804101C0804100C181-
     6 0000003F 4001C0804100C18140-
     6 00000048 00C1814001C0804100-
     6 00000051 C1814001C0804101C0-
     6 0000005A 804100C1814000C181-
     6 00000063 4001C0804101C08041-
     6 0000006C 00C1814001C0804100-
     6 00000075 C1814000C1814001C0-
     6 0000007E 804101C0804100C181-
     6 00000087 4000C1814001C08041-
     6 00000090 00C1814001C0804101-
     6 00000099 C0804100C1814000C1-
     6 000000A2 814001C0804101C080-
     6 000000AB 4100C1814001C08041-
     6 000000B4 00C1814000C1814001-
     6 000000BD C0804100C1814001C0-
     6 000000C6 804101C0804100C181-
     6 000000CF 4001C0804100C18140-
     6 000000D8 00C1814001C0804101-
     6 000000E1 C0804100C1814000C1-
     6 000000EA 814001C0804100C181-
     6 000000F3 4001C0804101C08041-
     6 000000FC 00C18140           
     7 00000100 00C0C101C30302C2C6-     myLow  db 0x00, 0xc0, 0xc1, 0x01, 0xc3, 0x03, 0x02, 0xc2, 0xc6, 0x06, 0x07, 0xc7, 0x05, 0xc5, 0xc4, 0x04, 0xcc, 0x0c, 0x0d, 0xcd, 0x0f, 0xcf, 0xce, 0x0e, 0x0a, 0xca, 0xcb, 0x0b, 0xc9, 0x09, 0x08, 0xc8, 0xd8, 0x18, 0x19, 0xd9, 0x1b, 0xdb, 0xda, 0x1a, 0x1e, 0xde, 0xdf, 0x1f, 0xdd, 0x1d, 0x1c, 0xdc, 0x14, 0xd4, 0xd5, 0x15, 0xd7, 0x17, 0x16, 0xd6, 0xd2, 0x12, 0x13, 0xd3, 0x11, 0xd1, 0xd0, 0x10, 0xf0, 0x30, 0x31, 0xf1, 0x33, 0xf3, 0xf2, 0x32, 0x36, 0xf6, 0xf7, 0x37, 0xf5, 0x35, 0x34, 0xf4, 0x3c, 0xfc, 0xfd, 0x3d, 0xff, 0x3f, 0x3e, 0xfe, 0xfa, 0x3a, 0x3b, 0xfb, 0x39, 0xf9, 0xf8, 0x38, 0x28, 0xe8, 0xe9, 0x29, 0xeb, 0x2b, 0x2a, 0xea, 0xee, 0x2e, 0x2f, 0xef, 0x2d, 0xed, 0xec, 0x2c, 0xe4, 0x24, 0x25, 0xe5, 0x27, 0xe7, 0xe6, 0x26, 0x22, 0xe2, 0xe3, 0x23, 0xe1, 0x21, 0x20, 0xe0, 0xa0, 0x60, 0x61, 0xa1, 0x63, 0xa3, 0xa2, 0x62, 0x66, 0xa6, 0xa7, 0x67, 0xa5, 0x65, 0x64, 0xa4, 0x6c, 0xac, 0xad, 0x6d, 0xaf, 0x6f, 0x6e, 0xae, 0xaa, 0x6a, 0x6b, 0xab, 0x69, 0xa9, 0xa8, 0x68, 0x78, 0xb8, 0xb9, 0x79, 0xbb, 0x7b, 0x7a, 0xba, 0x...
     7 00000109 0607C705C5C404CC0C-
     7 00000112 0DCD0FCFCE0E0ACACB-
     7 0000011B 0BC90908C8D81819D9-
     7 00000124 1BDBDA1A1EDEDF1FDD-
     7 0000012D 1D1CDC14D4D515D717-
     7 00000136 16D6D21213D311D1D0-
     7 0000013F 10F03031F133F3F232-
     7 00000148 36F6F737F53534F43C-
     7 00000151 FCFD3DFF3F3EFEFA3A-
     7 0000015A 3BFB39F9F83828E8E9-
     7 00000163 29EB2B2AEAEE2E2FEF-
     7 0000016C 2DEDEC2CE42425E527-
     7 00000175 E7E62622E2E323E121-
     7 0000017E 20E0A06061A163A3A2-
     7 00000187 6266A6A767A56564A4-
     7 00000190 6CACAD6DAF6F6EAEAA-
     7 00000199 6A6BAB69A9A86878B8-
     7 000001A2 B979BB7B7ABABE7E7F-
     7 000001AB BF7DBDBC7CB47475B5-
     7 000001B4 77B7B67672B2B373B1-
     7 000001BD 7170B0509091519353-
     7 000001C6 529296565797559594-
     7 000001CF 549C5C5D9D5F9F9E5E-
     7 000001D8 5A9A9B5B9959589888-
     7 000001E1 4849894B8B8A4A4E8E-
     7 000001EA 8F4F8D4D4C8C448485-
     7 000001F3 458747468682424383-
     7 000001FC 41818040           
     8                                   
     9 00000200 5242583A5243582025-     ftext      db   "RBX:RCX %x",0
     9 00000209 7800               
    10 0000020B 3A25782000              ftext2     db   ":%x ",0
    11 00000210 20205241583A257820-     ftexta     db   "  RAX:%x ",10,13,0
    11 00000219 0A0D00             
    12                                  
    13 0000021C FF                      crcHigh	   db   0xff;
    14 0000021D FF                      crcLow	   db   0xff;
    15                                  
    16 0000021E 7CA7                    key			dw 0xa77C;
    17                                  
    18                                  
    19                                  
    20                                  
    21                                  
    22                                  section .text
    23                                  global main
    24                                  main:
    25                                  
    26                                  ; printF
    27                                  ;	mov rax, 0
    28                                  ;	mov rdi, ftext
    29                                  ;	mov rsi, 0;value
    30                                  ;	call printString
    31                                  
    32                                  
    33                                   
    34                                   
    35                                  	
    36                                  	
    37 00000000 B800000000              mov rax,0
    38 00000005 BB00000000              mov rbx,0
    39 0000000A B900000000              mov rcx,0 
    40 0000000F BA00000000              mov rdx,0
    41                                  
    42                                  
    43                                  
    44                                  ; CRC
    45                                  		CRC_next:
    46                                  		
    47 00000014 B4FF                    		mov ah,0xff; HI
    48 00000016 B0FF                    		mov al,0xff; LO
    49                                  
    50 00000018 48FFC1                  		inc rcx
    51 0000001B 7309                    		jnc noIncRbx
    52 0000001D 48FFC3                  		inc rbx
    53 00000020 0F8252010000            		jc  exit
    54                                  		noIncRbx:
    55                                  		; data
    56                                  		; RBX:RCX
    57                                  		
    58                                  ; -----------------------------
    59                                  	
    60                                  		;mov R9B, byte [rbx]   ; dh = *pMessage
    61                                  		;	 inc rbx    ; Message++
    62                                  			 
    63                                  		; cl ch	 
    64 00000026 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    65 00000028 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
    66                                  		
    67 0000002A 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    68 00000030 30C4                    		xor ah,al
    69 00000032 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    70                                  		
    71 00000038 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    72 0000003A 30EA                    		xor dl, ch	; cl <-- next char	; index = dl
    73                                  		
    74 0000003C 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    75 00000042 30C4                    		xor ah,al
    76 00000044 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    77                                  
    78                                  		; 2cl,2ch
    79 0000004A 48C1C910                		ROR rcx,16
    80                                  		
    81 0000004E 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    82 00000050 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
    83                                  		
    84 00000052 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    85 00000058 30C4                    		xor ah,al
    86 0000005A 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    87                                  		
    88 00000060 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    89 00000062 30EA                    		xor dl, ch	; cl <-- next char	; index = dl
    90                                  		
    91 00000064 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    92 0000006A 30C4                    		xor ah,al
    93 0000006C 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    94                                  	 
    95 00000072 48C1C910                		ROR rcx,16
    96                                  		
    97 00000076 88E2                    				mov dl, ah      ; index = HiByte ^ *pMessage
    98 00000078 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
    99                                  		
   100 0000007A 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   101 00000080 30C4                    		xor ah,al
   102 00000082 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   103                                  		
   104 00000088 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   105 0000008A 30EA                    		xor dl, ch	; cl <-- next char	; index = dl
   106                                  		
   107 0000008C 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   108 00000092 30C4                    		xor ah,al
   109 00000094 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   110                                  
   111                                  		; 2cl,2ch
   112 0000009A 48C1C910                		ROR rcx,16
   113                                  		
   114 0000009E 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   115 000000A0 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   116                                  		
   117 000000A2 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   118 000000A8 30C4                    		xor ah,al
   119 000000AA 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   120                                  		
   121 000000B0 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   122 000000B2 30EA                    		xor dl, ch	; cl <-- next char	; index = dl
   123                                  		
   124 000000B4 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   125 000000BA 30C4                    		xor ah,al
   126 000000BC 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   127                                  	 
   128 000000C2 48C1C910                		ROR rcx,16
   129                                  		
   130                                  		; rbx
   131 000000C6 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   132 000000C8 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   133                                  		
   134 000000CA 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   135 000000D0 30C4                    		xor ah,al
   136 000000D2 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   137                                  		
   138 000000D8 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   139 000000DA 30FA                    		xor dl, bh	; cl <-- next char	; index = dl
   140                                  		
   141 000000DC 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   142 000000E2 30C4                    		xor ah,al
   143 000000E4 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   144                                  
   145                                  		; 2cl,2ch
   146 000000EA 48C1CB10                		ROR rbx,16
   147                                  		
   148 000000EE 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   149 000000F0 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   150                                  		
   151 000000F2 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   152 000000F8 30C4                    		xor ah,al
   153 000000FA 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   154                                  		
   155 00000100 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   156 00000102 30FA                    		xor dl, bh	; cl <-- next char	; index = dl
   157                                  		
   158 00000104 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   159 0000010A 30C4                    		xor ah,al
   160 0000010C 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   161                                  	 
   162 00000112 48C1CB10                		ROR rbx,16
   163                                  		
   164 00000116 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   165 00000118 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   166                                  		
   167 0000011A 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   168 00000120 30C4                    		xor ah,al
   169 00000122 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   170                                  		
   171 00000128 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   172 0000012A 30FA                    		xor dl, bh	; cl <-- next char	; index = dl
   173                                  		
   174 0000012C 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   175 00000132 30C4                    		xor ah,al
   176 00000134 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   177                                  
   178                                  		; 2cl,2ch
   179 0000013A 48C1CB10                		ROR rbx,16
   180                                  		
   181 0000013E 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   182 00000140 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   183                                  		
   184 00000142 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   185 00000148 30C4                    		xor ah,al
   186 0000014A 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   187                                  		
   188 00000150 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   189 00000152 30FA                    		xor dl, bh	; cl <-- next char	; index = dl
   190                                  		
   191 00000154 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   192 0000015A 30C4                    		xor ah,al
   193 0000015C 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   194                                  	 
   195 00000162 48C1CB10                		ROR rbx,16
   196                                  		
   197                                  		; <-
   198                                  		
   199 00000166 663B0425[1E020000]      		cmp ax, word[key];
   200                                  		;je myPrint
   201                                  		
   202 0000016E E812000000              		call myPrint 
   203 00000173 E99CFEFFFF              		jmp CRC_next
   204                                  		
   205                                  
   206                                  
   207                                   ; ---- funkcje 
   208                                  ; ---------------------------------
   209                                  
   210                                   
   211                                  
   212                                  global exit
   213                                  exit:
   214 00000178 B83C000000              	mov rax,60
   215 0000017D BF00000000              	mov rdi,0
   216 00000182 0F05                    	syscall
   217                                  
   218 00000184 C3                      ret
   219                                  
   220                                  
   221                                  global myPrint
   222                                  myPrint:
   223 00000185 50                      	push rax
   224 00000186 53                      	push rbx
   225 00000187 51                      	push rcx
   226 00000188 52                      	push rdx
   227                                  	
   228 00000189 57                      	push rdi
   229 0000018A 56                      	push rsi
   230                                  
   231 0000018B 53                      	push rbx
   232 0000018C 51                      	push rcx
   233                                  
   234 0000018D BE00000000              	mov rsi,0
   235 00000192 4889C6                  	mov rsi, rax
   236 00000195 B800000000              	mov rax, 0
   237 0000019A 48BF-                   	mov rdi, ftexta
   237 0000019C [1002000000000000] 
   238 000001A4 E8(00000000)            	call printf
   239                                  	
   240 000001A9 59                      	pop rcx
   241 000001AA 4889CE                  	mov rsi, rcx	
   242 000001AD B800000000              	mov rax, 0
   243 000001B2 48BF-                   	mov rdi, ftext
   243 000001B4 [0002000000000000] 
   244 000001BC E8(00000000)            	call printf
   245                                  	
   246 000001C1 5B                      	pop rbx
   247 000001C2 4889DE                  	mov rsi, rbx
   248 000001C5 B800000000              	mov rax, 0
   249 000001CA 48BF-                   	mov rdi, ftext2
   249 000001CC [0B02000000000000] 
   250 000001D4 E8(00000000)            	call printf
   251                                  
   252 000001D9 5E                      	pop rsi
   253 000001DA 5F                      	pop rdi
   254 000001DB 5A                      	pop rdx
   255 000001DC 59                      	pop rcx
   256 000001DD 5B                      	pop rbx
   257 000001DE 58                      	pop rax
   258 000001DF C3                      ret
   259                                  
   260                                  
   261                                  
   262                                   
