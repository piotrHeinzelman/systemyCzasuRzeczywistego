     1                                  extern printf
     2                                  section .data
     3                                  
     4                                  
     5                                  
     6 00000000 00C1814001C0804101-     myHigh db 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x01, 0xc0, 0x80, 0x41, 0x00, 0xc1, 0x81, 0x40, 0x00, 0xc1, 0x81, 0x40, 0x01, 0xc0, 0x80, 0x41, 0x...
     6 00000009 C0804100C1814001C0-
     6 00000012 804100C1814000C181-
     6 0000001B 4001C0804101C08041-
     6 00000024 00C1814000C1814001-
     6 0000002D C0804100C1814001C0-
     6 00000036 804101C0804100C181-
     6 0000003F 4001C0804100C18140-
     6 00000048 00C1814001C0804100-
     6 00000051 C1814001C0804101C0-
     6 0000005A 804100C1814000C181-
     6 00000063 4001C0804101C08041-
     6 0000006C 00C1814001C0804100-
     6 00000075 C1814000C1814001C0-
     6 0000007E 804101C0804100C181-
     6 00000087 4000C1814001C08041-
     6 00000090 00C1814001C0804101-
     6 00000099 C0804100C1814000C1-
     6 000000A2 814001C0804101C080-
     6 000000AB 4100C1814001C08041-
     6 000000B4 00C1814000C1814001-
     6 000000BD C0804100C1814001C0-
     6 000000C6 804101C0804100C181-
     6 000000CF 4001C0804100C18140-
     6 000000D8 00C1814001C0804101-
     6 000000E1 C0804100C1814000C1-
     6 000000EA 814001C0804100C181-
     6 000000F3 4001C0804101C08041-
     6 000000FC 00C18140           
     7 00000100 00C0C101C30302C2C6-     myLow  db 0x00, 0xc0, 0xc1, 0x01, 0xc3, 0x03, 0x02, 0xc2, 0xc6, 0x06, 0x07, 0xc7, 0x05, 0xc5, 0xc4, 0x04, 0xcc, 0x0c, 0x0d, 0xcd, 0x0f, 0xcf, 0xce, 0x0e, 0x0a, 0xca, 0xcb, 0x0b, 0xc9, 0x09, 0x08, 0xc8, 0xd8, 0x18, 0x19, 0xd9, 0x1b, 0xdb, 0xda, 0x1a, 0x1e, 0xde, 0xdf, 0x1f, 0xdd, 0x1d, 0x1c, 0xdc, 0x14, 0xd4, 0xd5, 0x15, 0xd7, 0x17, 0x16, 0xd6, 0xd2, 0x12, 0x13, 0xd3, 0x11, 0xd1, 0xd0, 0x10, 0xf0, 0x30, 0x31, 0xf1, 0x33, 0xf3, 0xf2, 0x32, 0x36, 0xf6, 0xf7, 0x37, 0xf5, 0x35, 0x34, 0xf4, 0x3c, 0xfc, 0xfd, 0x3d, 0xff, 0x3f, 0x3e, 0xfe, 0xfa, 0x3a, 0x3b, 0xfb, 0x39, 0xf9, 0xf8, 0x38, 0x28, 0xe8, 0xe9, 0x29, 0xeb, 0x2b, 0x2a, 0xea, 0xee, 0x2e, 0x2f, 0xef, 0x2d, 0xed, 0xec, 0x2c, 0xe4, 0x24, 0x25, 0xe5, 0x27, 0xe7, 0xe6, 0x26, 0x22, 0xe2, 0xe3, 0x23, 0xe1, 0x21, 0x20, 0xe0, 0xa0, 0x60, 0x61, 0xa1, 0x63, 0xa3, 0xa2, 0x62, 0x66, 0xa6, 0xa7, 0x67, 0xa5, 0x65, 0x64, 0xa4, 0x6c, 0xac, 0xad, 0x6d, 0xaf, 0x6f, 0x6e, 0xae, 0xaa, 0x6a, 0x6b, 0xab, 0x69, 0xa9, 0xa8, 0x68, 0x78, 0xb8, 0xb9, 0x79, 0xbb, 0x7b, 0x7a, 0xba, 0x...
     7 00000109 0607C705C5C404CC0C-
     7 00000112 0DCD0FCFCE0E0ACACB-
     7 0000011B 0BC90908C8D81819D9-
     7 00000124 1BDBDA1A1EDEDF1FDD-
     7 0000012D 1D1CDC14D4D515D717-
     7 00000136 16D6D21213D311D1D0-
     7 0000013F 10F03031F133F3F232-
     7 00000148 36F6F737F53534F43C-
     7 00000151 FCFD3DFF3F3EFEFA3A-
     7 0000015A 3BFB39F9F83828E8E9-
     7 00000163 29EB2B2AEAEE2E2FEF-
     7 0000016C 2DEDEC2CE42425E527-
     7 00000175 E7E62622E2E323E121-
     7 0000017E 20E0A06061A163A3A2-
     7 00000187 6266A6A767A56564A4-
     7 00000190 6CACAD6DAF6F6EAEAA-
     7 00000199 6A6BAB69A9A86878B8-
     7 000001A2 B979BB7B7ABABE7E7F-
     7 000001AB BF7DBDBC7CB47475B5-
     7 000001B4 77B7B67672B2B373B1-
     7 000001BD 7170B0509091519353-
     7 000001C6 529296565797559594-
     7 000001CF 549C5C5D9D5F9F9E5E-
     7 000001D8 5A9A9B5B9959589888-
     7 000001E1 4849894B8B8A4A4E8E-
     7 000001EA 8F4F8D4D4C8C448485-
     7 000001F3 458747468682424383-
     7 000001FC 41818040           
     8                                   
     9 00000200 5242583A5243582025-     ftext      db   "RBX:RCX %0X,%0X, RAX:%0X",10,13,0
     9 00000209 30582C2530582C2052-
     9 00000212 41583A2530580A0D00 
    10 0000021B 25780A0D00              ftextch      db   "%x",10,13,0
    11                                  
    12 00000220 FF                      crcHigh	   db   0xff;
    13 00000221 FF                      crcLow	   db   0xff;
    14                                  
    15 00000222 7CA7                    key			dw 0xa77C;
    16                                  
    17                                  
    18                                  
    19                                  
    20                                  
    21                                  section .text
    22                                  global main
    23                                  main:
    24                                  
    25                                  ; printF
    26                                  ;	mov rax, 0
    27                                  ;	mov rdi, ftext
    28                                  ;	mov rsi, 0;value
    29                                  ;	call printString
    30                                  
    31                                  	
    32 00000000 B800000000              mov rax,0
    33 00000005 BB00000000              mov rbx,0
    34 0000000A B900000000              mov rcx,0 
    35 0000000F BA00000000              mov rdx,0
    36                                  
    37                                  ;mov rbx,0x1111222233334444;
    38                                  ;mov rcx,0x5555666677778887;
    39                                  
    40                                  ; CRC
    41                                  		CRC_next:
    42                                  		
    43 00000014 B4FF                    		mov ah,0xff; HI
    44 00000016 B0FF                    		mov al,0xff; LO
    45                                  
    46                                  
    47 00000018 48FFC1                  		inc rcx
    48 0000001B 4883F900                		cmp rcx,0
    49 0000001F 7503                    		jnz noIncRbx
    50 00000021 48FFC3                  		inc rbx
    51                                  		;jc  exit
    52                                  		noIncRbx:
    53                                  		; data
    54                                  		; RBX:RCX
    55                                  		
    56                                  ; -----------------------------
    57                                  	
    58                                  		;mov R9B, byte [rbx]   ; dh = *pMessage
    59                                  		;	 inc rbx    ; Message++
    60                                  			 
    61                                  		; cl ch	 
    62 00000024 48C1C308                		rol rbx,8
    63                                  
    64 00000028 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    65 0000002A 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
    66                                  		
    67                                  		
    68 0000002C 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    69 00000032 30C4                    		xor ah,al
    70 00000034 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    71                                  
    72                                  
    73                                  ;mov rsi,rbx
    74                                  ;call myPrint2
    75                                  		
    76                                  		
    77                                  
    78                                  
    79 0000003A 48C1C308                		rol rbx,8
    80 0000003E 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    81 00000040 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
    82                                  		
    83 00000042 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    84 00000048 30C4                    		xor ah,al
    85 0000004A 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    86                                  		
    87 00000050 48C1C308                		rol rbx,8
    88 00000054 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    89 00000056 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
    90                                  		
    91 00000058 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
    92 0000005E 30C4                    		xor ah,al
    93 00000060 8A82[00010000]          		mov al,byte [ myLow + rdx ]
    94                                  
    95 00000066 48C1C308                		rol rbx,8
    96 0000006A 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
    97 0000006C 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
    98                                  		
    99 0000006E 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   100 00000074 30C4                    		xor ah,al
   101 00000076 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   102                                  		
   103 0000007C 48C1C308                		rol rbx,8
   104 00000080 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   105 00000082 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   106                                  		
   107 00000084 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   108 0000008A 30C4                    		xor ah,al
   109 0000008C 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   110                                  
   111 00000092 48C1C308                		rol rbx,8
   112 00000096 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   113 00000098 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   114                                  		
   115 0000009A 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   116 000000A0 30C4                    		xor ah,al
   117 000000A2 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   118                                  		
   119 000000A8 48C1C308                		rol rbx,8
   120 000000AC 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   121 000000AE 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   122                                  		
   123 000000B0 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   124 000000B6 30C4                    		xor ah,al
   125 000000B8 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   126                                  
   127 000000BE 48C1C308                		rol rbx,8
   128 000000C2 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   129 000000C4 30DA                    		xor dl, bl	; cl <-- next char	; index = dl
   130                                  		
   131 000000C6 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   132 000000CC 30C4                    		xor ah,al
   133 000000CE 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   134                                  		
   135                                  		
   136                                  
   137 000000D4 48C1C108                		rol rcx,8
   138 000000D8 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   139 000000DA 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   140                                  		
   141 000000DC 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   142 000000E2 30C4                    		xor ah,al
   143 000000E4 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   144                                  		
   145 000000EA 48C1C108                		rol rcx,8
   146 000000EE 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   147 000000F0 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   148                                  		
   149 000000F2 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   150 000000F8 30C4                    		xor ah,al
   151 000000FA 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   152                                  
   153 00000100 48C1C108                		rol rcx,8
   154 00000104 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   155 00000106 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   156                                  		
   157 00000108 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   158 0000010E 30C4                    		xor ah,al
   159 00000110 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   160                                  		
   161 00000116 48C1C108                		rol rcx,8
   162 0000011A 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   163 0000011C 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   164                                  		
   165 0000011E 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   166 00000124 30C4                    		xor ah,al
   167 00000126 8A82[00010000]          		mov al,byte [ myLow + rdx ]	
   168                                  		
   169 0000012C 48C1C108                		rol rcx,8
   170 00000130 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   171 00000132 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   172                                  		
   173 00000134 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   174 0000013A 30C4                    		xor ah,al
   175 0000013C 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   176                                  		
   177 00000142 48C1C108                		rol rcx,8
   178 00000146 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   179 00000148 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   180                                  		
   181 0000014A 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   182 00000150 30C4                    		xor ah,al
   183 00000152 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   184                                  
   185 00000158 48C1C108                		rol rcx,8
   186 0000015C 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   187 0000015E 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   188                                  		
   189 00000160 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   190 00000166 30C4                    		xor ah,al
   191 00000168 8A82[00010000]          		mov al,byte [ myLow + rdx ]
   192                                  		
   193 0000016E 48C1C108                		rol rcx,8
   194 00000172 88E2                    		mov dl, ah      ; index = HiByte ^ *pMessage
   195 00000174 30CA                    		xor dl, cl	; cl <-- next char	; index = dl
   196                                  		
   197 00000176 8AA2[00000000]          		mov ah,byte [ myHigh + rdx ]
   198 0000017C 30C4                    		xor ah,al
   199 0000017E 8A82[00010000]          		mov al,byte [ myLow + rdx ]		
   200                                  		
   201                                  		
   202                                  		
   203                                  		
   204                                  		; <-
   205                                  		
   206 00000184 663D7CA7                		cmp ax, word 0xa77c;
   207                                  		;je myPrint
   208                                  		
   209 00000188 E812000000              		call myPrint 
   210 0000018D E982FEFFFF              		jmp CRC_next
   211                                  		
   212                                  
   213                                  
   214                                   ; ---- funkcje 
   215                                  ; ---------------------------------
   216                                  
   217                                   
   218                                  
   219                                  global exit
   220                                  exit:
   221 00000192 B83C000000              	mov rax,60
   222 00000197 BF00000000              	mov rdi,0
   223 0000019C 0F05                    	syscall
   224                                  
   225 0000019E C3                      ret
   226                                  
   227                                  
   228                                  global myPrint
   229                                  myPrint:
   230 0000019F 50                      	push rax
   231 000001A0 53                      	push rbx
   232 000001A1 51                      	push rcx
   233 000001A2 52                      	push rdx
   234                                  	
   235 000001A3 57                      	push rdi
   236 000001A4 56                      	push rsi
   237                                  
   238 000001A5 53                      	push rbx
   239 000001A6 51                      	push rcx
   240                                  
   241                                  
   242 000001A7 4889DE                  	mov rsi, rbx
   243 000001AA 4889CA                  	mov rdx, rcx
   244 000001AD 4889C1                  	mov rcx, rax
   245 000001B0 B800000000              	mov rax, 0
   246 000001B5 48BF-                   	mov rdi, ftext
   246 000001B7 [0002000000000000] 
   247                                  	
   248 000001BF E8(00000000)            	call printf
   249                                  	
   250 000001C4 59                      	pop rcx
   251 000001C5 5B                      	pop rbx
   252                                  
   253 000001C6 5E                      	pop rsi
   254 000001C7 5F                      	pop rdi
   255 000001C8 5A                      	pop rdx
   256 000001C9 59                      	pop rcx
   257 000001CA 5B                      	pop rbx
   258 000001CB 58                      	pop rax
   259 000001CC C3                      ret
   260                                  
   261                                  
   262                                  global myPrint2
   263                                  myPrint2:
   264 000001CD 50                      	push rax
   265 000001CE 57                      	push rdi
   266 000001CF 51                      	push rcx
   267                                  
   268                                  
   269 000001D0 B800000000              	mov rax, 0
   270 000001D5 48BF-                   	mov rdi, ftextch
   270 000001D7 [1B02000000000000] 
   271                                  	
   272 000001DF E8(00000000)            	call printf
   273                                  
   274 000001E4 59                      	pop rcx
   275 000001E5 5F                      	pop rdi
   276 000001E6 58                      	pop rax
   277 000001E7 C3                      ret
   278                                  
   279                                  
   280                                   
